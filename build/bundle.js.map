{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores/viewStore.ts","../../src/stores/errorStore.ts","../../src/js/db.ts","../../src/js/utils.ts","../../src/js/store.ts","../../src/js/questModel.ts","../../src/js/hash.ts","../../src/js/admin.ts","../../src/js/github.ts","../../src/js/topicModel.ts","../../src/components/ErrorShow.svelte","../../src/components/TopicInfo.svelte","../../src/components/TopicCard.svelte","../../src/components/ViewTopicList.svelte","../../src/js/Markdown.ts","../../src/components/ViewTopicInfo.svelte","../../src/js/persist.ts","../../src/components/QuestProgress.svelte","../../src/components/QuestArrShow.svelte","../../src/components/ViewTopicQuests.svelte","../../src/components/ViewTagInfo.svelte","../../src/components/ViewTagQuests.svelte","../../src/components/QuestStatistic.svelte","../../src/components/QuestAnswer.svelte","../../src/components/ViewQuestAnswer.svelte","../../src/components/ViewTranslate.svelte","../../src/components/ViewHashes.svelte","../../src/components/AdminShow.svelte","../../src/components/Popup.svelte","../../src/components/ViewAdmin.svelte","../../src/App.svelte","../../src/js/pwa.ts","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n/**\n * The function creates the view store.\n */\nconst createViewStore = () => {\n    //\n    // Initialize the store with an empty object.\n    //\n    const { subscribe, set, update } = writable({ component: '' });\n    return {\n        views: {},\n        subscribe,\n        setView: (id, props) => {\n            const view = viewStore.views[id];\n            view.props = props;\n            set(view);\n        },\n    };\n};\nexport const viewStore = createViewStore();\n","import { writable } from 'svelte/store';\n/**\n * The function creates a store object for errors. The errors are maintained in\n * an array.\n */\nconst createErrorStore = () => {\n    //\n    // Initialize the store with an empty array.\n    //\n    const { subscribe, set, update } = writable([]);\n    return {\n        subscribe,\n        /**\n         * Add a new error to the error array.\n         */\n        addError: (error) => {\n            update(errors => {\n                errors.push(error);\n                return errors;\n            });\n        },\n        /**\n         * Add an error for the UI and then throw it.\n         */\n        throwError(error) {\n            update(errors => {\n                errors.push(error);\n                return errors;\n            });\n            throw Error(error);\n        },\n        /**\n         * Reset the store with an empty array.\n         */\n        resetErrors: () => {\n            console.log('reset');\n            set([]);\n        },\n    };\n};\nexport const errorStore = createErrorStore();\n","import { errorStore } from '../stores/errorStore';\nconst DB_VERSION = 4;\n/**\n * Simple error callback function.\n */\n// TODO: define type!\nconst onError = (event) => {\n    errorStore.addError(event.type);\n};\n/**\n * The function implements an update for the indexeddb from version 0 to\n * version 1.\n */\nconst initAndUpdate = (db, event) => {\n    //\n    // Create topics store\n    //\n    if (!db.objectStoreNames.contains('topics')) {\n        db.createObjectStore('topics', {\n            keyPath: 'file',\n        });\n    }\n    //\n    // Create questions store\n    //\n    if (!db.objectStoreNames.contains('questions')) {\n        const storeQuest = db.createObjectStore('questions', {\n            keyPath: 'id', autoIncrement: true\n        });\n        if (!storeQuest.indexNames.contains('file')) {\n            storeQuest.createIndex('file', 'file', { unique: false });\n        }\n    }\n    //\n    // Create config store\n    //\n    if (!db.objectStoreNames.contains('hash')) {\n        const storeHash = db.createObjectStore('hash', {\n            keyPath: 'file',\n        });\n        storeHash.transaction.oncomplete = () => {\n            console.log('Upgrade completed!');\n        };\n    }\n    if (!db.objectStoreNames.contains('admin')) {\n        const storeHash = db.createObjectStore('admin', {\n            keyPath: 'config',\n        });\n    }\n    //\n    // Create config store\n    //\n    if (db.objectStoreNames.contains('config')) {\n        db.deleteObjectStore('config');\n    }\n};\n/**\n * The function iniitalizes the indexed db.\n */\nexport const dbInit = () => {\n    //\n    // The function returns a promise to be able to wait for the db to be\n    // initialized, before we go on.\n    //\n    return new Promise((resolve, reject) => {\n        //\n        // Open db request for version 1.\n        //\n        const request = indexedDB.open('s-card', DB_VERSION);\n        //\n        // Callback function for creating or upgrading the db.\n        //\n        request.onupgradeneeded = (event) => {\n            //\n            // Set the database.\n            //\n            const db = request.result;\n            if (event.oldVersion < DB_VERSION) {\n                initAndUpdate(db, event);\n            }\n            resolve(db);\n        };\n        //\n        // Error handling callback function for the opening request.\n        //\n        request.onerror = (event) => {\n            errorStore.addError(event.type);\n            reject();\n        };\n        request.onsuccess = (event) => {\n            //\n            // Set the database.\n            //\n            const db = request.result;\n            //\n            // Centeralized error handling callback function.\n            //\n            db.onerror = onError;\n            console.log('db init success!');\n            resolve(db);\n        };\n    });\n};\nexport let dbPromise = dbInit();\n","import { errorStore } from \"../stores/errorStore\";\n/**\n * The function returns a formated date value or an empty string if the date is\n * not defined.\n */\nexport const fmtDate = (d) => {\n    //\n    // Handle empty dates.\n    //\n    if (!d) {\n        return '';\n    }\n    const day = d.getDate() > 9 ? d.getDate() : '0' + d.getDate();\n    const m = d.getMonth() + 1;\n    const month = m > 9 ? m : '0' + m;\n    const hour = d.getHours() > 9 ? d.getHours() : '0' + d.getHours();\n    const minute = d.getMinutes() > 9 ? d.getMinutes() : '0' + d.getMinutes();\n    return `${day}.${month}.${d.getFullYear()} ${hour}:${minute}`;\n};\n/**\n * The function is called with an array of objects. Each object should have\n * property named 'prop'. The function returns a map of the objects and the\n * key is the property.\n */\nexport const arrToMap = (arr, prop) => {\n    const map = new Map();\n    arr.forEach((elem) => {\n        if (!elem.hasOwnProperty(prop)) {\n            errorStore.throwError(`Object has no property: ${prop}`);\n        }\n        const key = elem[prop];\n        if (map.has(key)) {\n            errorStore.throwError(`Duplicate key: ${prop}`);\n        }\n        map.set(key, elem);\n    });\n    return map;\n};\n/**\n * The function checks if two arrays of strings are equal.\n */\nexport const arrIsEqual = (arr1, arr2) => {\n    //\n    // Ensure that both exist.\n    //\n    const a1 = arr1 ? arr1 : [];\n    const a2 = arr2 ? arr2 : [];\n    return a1.toString() === a2.toString();\n};\n/**\n * The function is called with an array and a value. The function checks if all\n * of the array values have the given value.\n */\nexport const arrAll = (arr, val) => {\n    for (let i in arr) {\n        if (arr[i] !== val) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * The function is called with an array of integers. Each can have a max value.\n * The function computes a percentage string from the values. 100% means that\n * all entries have the max value.\n */\nexport const arrPercentage = (arr, max) => {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        sum += arr[i];\n    }\n    return percentage(sum, arr.length * max);\n};\n/**\n * The function returns a percentage for a fraction of a total value.\n */\nexport const percentage = (num, total) => {\n    //\n    // Prevent NaN\n    //\n    if (!total) {\n        return 0;\n    }\n    const result = (num * 100) / total;\n    return Math.round(result);\n};\n/**\n * The function returns a random number between min and max. Both are included\n * and it is assumed that both parameters are integers.\n */\nconst getRandomIntInclusive = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n/**\n * The function shuffles an array in place.\n */\nexport const shuffleArr = (arr) => {\n    for (let i = 0; i < arr.length; i++) {\n        //\n        // Get a random index of the array\n        //\n        let j = getRandomIntInclusive(0, arr.length - 1);\n        //\n        // Ensure that there is something to do\n        //\n        if (i === j) {\n            continue;\n        }\n        //\n        // Swap i and j\n        //\n        let tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp;\n    }\n};\n/**\n * The function creates a toogling function, which toogles two string values\n * after 'repeat' calls.\n */\nexport const createRepeatToggle = (repeat, first, second) => {\n    let count = 0;\n    return () => {\n        return (count++ % (2 * repeat) < repeat) ? first : second;\n    };\n};\n","import { errorStore } from \"../stores/errorStore\";\n/**\n * The function is called with a transaction for a store, that has an index\n * with a given name. It deletes all elements from the store that have an index\n * with the value.\n */\nexport const storeDeleteIndex = (tx, storeName, idxName, idxValue) => {\n    return new Promise((resolve, reject) => {\n        //\n        // Get the store from the transaction.\n        //\n        const store = tx.objectStore(storeName);\n        //\n        // Get all keys for items that have the given value for the index.\n        //\n        const request = store.index(idxName).getAllKeys(idxValue);\n        //\n        // Get an array with the keys of the matching objects,\n        //\n        request.onsuccess = (e) => {\n            const keys = request.result;\n            //\n            // Delete all objects with their keys,\n            //\n            keys.forEach((key) => {\n                storeDel(store, key);\n            });\n            //\n            // Resolve after all elements are deleted.\n            //\n            resolve();\n        };\n    });\n};\n/**\n * Simple wrapper that deletes an object by its id and returns a promise.\n */\nexport const storeDel = (store, id) => {\n    return new Promise((resolve, reject) => {\n        const request = store.delete(id);\n        request.onsuccess = (e) => {\n            console.log('Store:', store.name, 'delete:', id);\n            resolve();\n        };\n        request.onerror = (e) => {\n            errorStore.addError(`Store: ${store.name} delete: ${id} error: ${e}`);\n            reject();\n        };\n    });\n};\n/**\n * Simple wrapper that inserts an object and returns a promise.\n */\nexport const storeAdd = (store, obj) => {\n    return new Promise((resolve, reject) => {\n        const request = store.add(obj);\n        request.onsuccess = (e) => {\n            console.log('Store:', store.name, 'add:', obj);\n            resolve();\n        };\n        request.onerror = (e) => {\n            errorStore.addError(`Store: ${store.name} add: ${obj} error: ${e}`);\n            reject();\n        };\n    });\n};\n/**\n * Simple wrapper that updates an object and returns a promise.\n */\nexport const storePut = (store, obj) => {\n    return new Promise((resolve, reject) => {\n        const request = store.put(obj);\n        request.onsuccess = (e) => {\n            console.log('Store:', store.name, 'put:', obj);\n            resolve();\n        };\n        request.onerror = (e) => {\n            errorStore.addError(`Store: ${store.name} put: ${obj} error: ${e}`);\n            reject();\n        };\n    });\n};\n","import { dbPromise } from './db';\nimport { percentage, arrToMap, shuffleArr } from './utils';\nimport { storeAdd, storePut, storeDel, storeDeleteIndex } from './store';\n/**\n * The function initializes a question that was loaded from a topic file. The\n * input is not a question. It is the data from the json. The added properties\n * are missing.\n */\nconst questInit = (quest, file) => {\n    quest.file = file;\n    quest.total = 0;\n    quest.failed = 0;\n    quest.ratio = 0.0;\n    quest.progress = 0;\n};\n/**\n * The function copies parts from the store, that are not provided in the json.\n */\nconst questCopyPart = (from, to) => {\n    //\n    // Ensure that the questions are ok.\n    //\n    if (from.id !== to.id) {\n        throw Error(`Unable to copy question parts: ${from.id} - ${to.id}`);\n    }\n    to.file = from.file;\n    to.total = from.total;\n    to.failed = from.failed;\n    to.ratio = from.ratio;\n    to.progress = from.progress;\n};\n/**\n * The function is called with an array of questions and counts the number of\n * correct answers for each question. It returns an array with integers.\n */\nexport const questGetStatistics = (quests) => {\n    const statistic = [0, 0, 0, 0];\n    quests.forEach((a) => {\n        statistic[a.progress]++;\n    });\n    return statistic;\n};\n/**\n * The function is called with a question and a boolean value indicating if the\n * answer was correct. It updates the question, which then has to be persisted.\n */\nexport const questOnAnswer = (quest, isCorrect) => {\n    if (isCorrect) {\n        quest.progress++;\n    }\n    else {\n        quest.progress = 0;\n        quest.failed++;\n    }\n    quest.total++;\n    quest.ratio = percentage(quest.failed, quest.total);\n};\n/**\n * The function removes all questions from a given file from the store. It\n * returns a promise.\n */\nexport const questRemoveFile = (tx, file) => {\n    return storeDeleteIndex(tx, 'questions', 'file', file);\n};\n/**\n * The function is called with a question, which should be persisted. It\n * returns a Promise.\n */\nexport const questPersist = (quest) => {\n    return new Promise(async (resolve, reject) => {\n        const store = (await dbPromise)\n            .transaction(['questions'], 'readwrite')\n            .objectStore('questions');\n        store.put(quest).onsuccess = (e) => {\n            console.log('Store:', store.name, ' update:', quest);\n            resolve();\n        };\n    });\n};\n/**\n * The function gets all questions for a topic from the store. It returns a\n * promise with an array of questions. It is a wrapper, that gets a store and\n * calls the function below.\n */\nexport const questGetAll = async (topic) => {\n    const store = (await dbPromise)\n        .transaction(['questions'], 'readonly')\n        .objectStore('questions');\n    return questGetAllTx(store, topic);\n};\n/**\n * The function gets all questions for a topic from the store. It returns a\n * promise with an array of questions.\n */\nconst questGetAllTx = (store, topic) => {\n    return new Promise((resolve, reject) => {\n        const request = store.index('file').getAll(topic.file);\n        request.onsuccess = (e) => {\n            resolve(request.result);\n        };\n    });\n};\n/**\n * The function collects the 'progress' property from questions that are from a\n * given file. It returns an array with the 'progress' values.\n */\n// TODO: This is reading questions and mapping them to progress. This can be \n// done simpler with questGetAll().map()\nexport const questGetStats = (file) => {\n    return new Promise(async (resolve, reject) => {\n        const result = [];\n        //\n        // We are only interested in questions from a given file.\n        //\n        const range = IDBKeyRange.only(file);\n        const store = (await dbPromise)\n            .transaction(['questions'], 'readwrite')\n            .objectStore('questions');\n        const request = store.index('file').openCursor(range);\n        request.onsuccess = (e) => {\n            //\n            // The result coontains the cursor.\n            //\n            const cursor = request.result;\n            if (cursor) {\n                //\n                // The cursor value is our question.\n                //\n                const quest = cursor.value;\n                result.push(quest.progress);\n                cursor.continue();\n            }\n            //\n            // The cursor has finished.\n            //\n            else {\n                console.log('Store:', store.name, 'progress values:', result);\n                resolve(result);\n            }\n        };\n    });\n};\n/**\n * The functions is called with an array of questions (from tags). The progress\n * of each question is set to a given number (0-2).\n */\nexport const questSetProgressArr = async (quests, value) => {\n    const store = (await dbPromise)\n        .transaction(['questions'], 'readwrite')\n        .objectStore('questions');\n    const promises = quests.map(quest => {\n        quest.progress = value;\n        return new Promise((resolve, reject) => {\n            store.put(quest).onsuccess = (e) => {\n                resolve();\n            };\n        });\n    });\n    await Promise.all(promises);\n};\n/**\n * The function is called with an array of topics. It reads all questions from\n * the topics, sorts them by the ration and returns a Promise for an array with\n * max elements with the highest ratios.\n */\nexport const questGetTag = async (topics, numQuests, fraction) => {\n    //\n    // We use one transaction / store for all topics\n    //\n    const store = (await dbPromise)\n        .transaction(['questions'], 'readonly')\n        .objectStore('questions');\n    let promises = [];\n    //\n    // Get a promise for the questions for each topic.\n    //\n    topics.forEach(t => {\n        promises.push(questGetAllTx(store, t));\n    });\n    //\n    // When we got the question array from all topics, we aggregate and sort them\n    // and return a slice. \n    //\n    return Promise.all(promises).then(arrOfArr => {\n        //\n        // Each promise returns an array of questions and we have to concatinate \n        // them all.\n        //\n        let all = [].concat(...arrOfArr);\n        //\n        // First we shuffle the array and the we sort it. The sorting effects only\n        // questions with different ratios. The shuffling then effects questions \n        // with the same ratio.\n        //\n        shuffleArr(all);\n        //\n        // Sort the array with the highest ratio first.\n        //\n        all.sort((a, b) => {\n            return b.ratio - a.ratio;\n        });\n        //\n        // If we want all, then we get all.\n        //\n        if (numQuests <= 0) {\n            return all;\n        }\n        //\n        // We select the part of the questions with the highest ratio. We shuffle\n        // this part and return the requested number of questions.\n        //\n        const part = Math.round(all.length * fraction);\n        console.log('max:', numQuests, 'part:', part, 'fraction:', fraction);\n        if (part > numQuests) {\n            all = all.splice(0, part);\n            shuffleArr(all);\n        }\n        //\n        // Return an array with up to max members.\n        //\n        return all.splice(0, numQuests);\n    });\n};\n/**\n * The function syncs the questions from a json file with the corresponding\n * questions in the store.\n */\nexport const questSync = (tx, file, json) => {\n    const store = tx.objectStore('questions');\n    const request = store.index('file').getAll(file);\n    request.onsuccess = (e) => {\n        const jMap = arrToMap(json, 'id');\n        const sMap = arrToMap(request.result, 'id');\n        //\n        // Remove the unnecessary questions.\n        //\n        sMap.forEach(quest => {\n            if (!jMap.has(quest.id)) {\n                storeDel(store, quest.id);\n            }\n        });\n        jMap.forEach(quest => {\n            if (sMap.has(quest.id)) {\n                questCopyPart(sMap.get(quest.id), quest);\n                storePut(store, quest);\n            }\n            else {\n                questInit(quest, file);\n                storeAdd(store, quest);\n            }\n        });\n    };\n};\n/**\n * The function reads a question from the store.\n */\nexport const questGet = (store, id) => {\n    return new Promise((resolve, reject) => {\n        const request = store.get(id);\n        request.onsuccess = (e) => {\n            resolve(request.result);\n        };\n        request.onerror = (e) => {\n            console.log('Store:', store.name, 'questGet:', e);\n            reject();\n        };\n    });\n};\n/**\n * The function creates an array with backup data from the store.\n */\nexport const questGetBackup = () => {\n    return new Promise(async (resolve, reject) => {\n        const result = [];\n        const store = (await dbPromise)\n            .transaction(['questions'], 'readonly')\n            .objectStore('questions');\n        const request = store.openCursor();\n        request.onsuccess = (e) => {\n            const cursor = request.result;\n            if (cursor) {\n                const quest = cursor.value;\n                result.push([\n                    quest.id,\n                    quest.failed,\n                    quest.total\n                ]);\n                cursor.continue();\n            }\n            else {\n                console.log('Store:', store.name, 'questGetBackup finished:', result.length);\n                resolve(result);\n            }\n        };\n        request.onerror = (e) => {\n            console.log('Store:', store.name, 'questGetBackup:', e);\n            reject();\n        };\n    });\n};\n/**\n * The function writes the restore data to the store. This is done only if the\n * restored total value is greater than the total value from the store. This\n * prevents the function from overwriting the store with stale backup data.\n */\nexport const questSetRestore = async (restore) => {\n    const store = (await dbPromise)\n        .transaction(['questions'], 'readwrite')\n        .objectStore('questions');\n    restore.forEach(a => {\n        const [id, failed, total] = [...a];\n        questGet(store, id).then(quest => {\n            if (quest && quest.total < total) {\n                quest.failed = failed;\n                quest.total = total;\n                quest.ratio = percentage(failed, total);\n                storePut(store, quest);\n            }\n        });\n    });\n};\n","import { dbPromise } from './db';\nimport { storeDel } from './store';\n/**\n * The function gets a Hash object from the store, for a given file. If the\n * store does not contains a Hash object, a new is created.\n */\nexport const hashGet = (file) => {\n    return new Promise(async (resolve, reject) => {\n        const store = (await dbPromise).transaction(['hash'], 'readonly').objectStore('hash');\n        const request = store.get(file);\n        request.onsuccess = (e) => {\n            const hash = request.result ? request.result : { file: file };\n            console.log('Store:', store.name, 'get:', hash);\n            resolve(hash);\n        };\n        request.onerror = (e) => {\n            console.log('Store:', store.name, 'get:', file, 'error', e);\n            reject();\n        };\n    });\n};\n/**\n * The function returns a list of all hashes as a promise.\n */\nexport const hashGetAll = () => {\n    return new Promise(async (resolve, reject) => {\n        const store = (await dbPromise).transaction(['hash'], 'readonly').objectStore('hash');\n        const request = store.getAll();\n        request.onsuccess = (e) => {\n            const hashes = request.result;\n            console.log('Store:', store.name, 'get all:', hashes.length);\n            resolve(hashes);\n        };\n        request.onerror = (e) => {\n            console.log('Store:', store.name, 'get all error:', e);\n            reject();\n        };\n    });\n};\n/**\n * The function puts a Hash object in the store.\n */\nexport const hashPut = (hash) => {\n    return new Promise(async (resolve, reject) => {\n        const store = (await dbPromise).transaction(['hash'], 'readwrite').objectStore('hash');\n        const request = store.put(hash);\n        request.onsuccess = (e) => {\n            console.log('Store:', store.name, 'put:', hash);\n            resolve();\n        };\n        request.onerror = (e) => {\n            console.log('Store:', store.name, 'put:', hash, 'error', e);\n            reject();\n        };\n    });\n};\n/**\n * The function deletes a Hash object in the store.\n */\nexport const hashDelTx = (tx, file) => {\n    const store = tx.objectStore('hash');\n    return storeDel(store, file);\n};\n/**\n * The function deletes a Hash object in the store.\n */\nexport const hashDel = async (file) => {\n    const store = (await dbPromise).transaction(['hash'], 'readwrite').objectStore('hash');\n    return storeDel(store, file);\n};\n","import { dbPromise } from './db';\nimport { storePut } from './store';\nconst langUrlDefault = 'https://api.github.com/repos/dead-end/cards-russian/contents/';\n/**\n * The function reads the admin object from the indexeddb.\n */\nexport const adminGet = () => {\n    return new Promise(async (resolve, reject) => {\n        const store = (await dbPromise)\n            .transaction(['admin'], 'readonly')\n            .objectStore('admin');\n        const request = store.get('admin');\n        request.onsuccess = (e) => {\n            let admin = request.result;\n            if (!admin) {\n                admin = {\n                    config: 'admin',\n                    langUrl: langUrlDefault,\n                    backupUrl: '',\n                    file: '',\n                    token: ''\n                };\n            }\n            resolve(admin);\n        };\n    });\n};\n/**\n * The function writes the admin configuration to the indexeddb.\n */\nexport const adminPut = async (admin) => {\n    const store = (await dbPromise).transaction(['admin'], 'readwrite').objectStore('admin');\n    storePut(store, admin);\n};\n","import { errorStore } from '../stores/errorStore';\nimport { hashGet, hashPut } from './hash';\nimport { adminGet } from './admin';\n/**\n * See: https://developer.mozilla.org/en-US/docs/Glossary/Base64\n */\nconst utf8_to_b64 = (str) => {\n    return window.btoa(unescape(encodeURIComponent(str)));\n};\n/**\n * See: https://developer.mozilla.org/en-US/docs/Glossary/Base64\n */\nconst b64_to_utf8 = (str) => {\n    return decodeURIComponent(escape(window.atob(str)));\n};\n/**\n * The function parses json data from github.\n */\nconst githubParseJson = (content) => {\n    try {\n        return JSON.parse(b64_to_utf8(content));\n    }\n    catch (e) {\n        errorStore.addError(`githubParseContent - unable to parse json content: ${e}`);\n    }\n};\n/**\n * Adding a token to the headers if present.\n */\nconst githubGetHeader = (admin) => {\n    const result = {\n        Accept: 'application/vnd.github.v3+json'\n    };\n    if (admin && admin.token) {\n        result.authorization = `token ${admin.token}`;\n    }\n    return result;\n};\n/**\n * Create an object with the backup url and the necessary headers.\n */\nconst githubGetBackupUrl = async () => {\n    const admin = await adminGet();\n    return {\n        backupUrl: admin.backupUrl + admin.file + '.json',\n        headers: githubGetHeader(admin)\n    };\n};\n/**\n * Create an object with the file url and the necessary headers.\n */\nconst githubGetFileUrl = async (file) => {\n    const admin = await adminGet();\n    return {\n        fileUrl: admin.langUrl + file,\n        headers: githubGetHeader(admin)\n    };\n};\n/**\n * The function return the sha value for a file. Example:\n *\n * etag: W/\"92cf13a1ecb655679f232302e0535d4ea689fb7f\"\n * sha:     92cf13a1ecb655679f232302e0535d4ea689fb7f\n */\nconst githubGetEtag = async (url, headers) => {\n    const response = await fetch(url, { method: 'HEAD', headers: headers }).catch(e => {\n        errorStore.addError(`githubGetEtag - url: ${url} error: ${e}`);\n    });\n    if (!response || response.status === 404) {\n        return;\n    }\n    if (!response.ok) {\n        errorStore.addError(`githubGetEtag - url: ${url} error: ${response.statusText}`);\n        return;\n    }\n    const etag = response.headers.get('ETag');\n    if (!etag) {\n        return;\n    }\n    const start = etag.startsWith('W/') ? 3 : 1;\n    return etag.substring(start, etag.length - 1);\n};\n/**\n * The function does a head request and checks a etag possible header with a\n * given value.\n */\nconst githubCheckEtag = async (url, headers, hash) => {\n    const etag = await githubGetEtag(url, headers);\n    if (!etag) {\n        return false;\n    }\n    const result = etag === hash;\n    console.log('url :', url, 'ETag', etag, 'hash', hash, 'matches', result);\n    return result;\n};\n/**\n * The function does a get request to a github url and returns the json.\n */\nconst githubGetJsonContent = async (url, headers) => {\n    const response = await fetch(url, headers).catch(e => {\n        errorStore.addError(`githubGetJsonContent - url: ${url} error: ${e}`);\n    });\n    if (!response) {\n        return;\n    }\n    if (!response.ok) {\n        errorStore.addError(`githubGetJsonContent - url: ${url} error: ${response.statusText}`);\n        return;\n    }\n    return response.json();\n};\n/**\n * The function gets a json file from github.\n */\nexport const githubGetJson = async (file) => {\n    const { fileUrl, headers } = await githubGetFileUrl(file);\n    //\n    // Get etag if present\n    //\n    let hash = await hashGet(file);\n    if (hash.value) {\n        const etagCheck = await githubCheckEtag(fileUrl, headers, hash.value);\n        if (etagCheck) {\n            return;\n        }\n    }\n    const json = await githubGetJsonContent(fileUrl, headers);\n    if (!json) {\n        return;\n    }\n    const content = githubParseJson(json.content);\n    if (!content) {\n        return;\n    }\n    //\n    // Update the hash in the store\n    //\n    hash.value = json.sha;\n    hash.lastLoaded = new Date();\n    await hashPut(hash);\n    console.log('githubGetJson', content);\n    return content;\n};\n/**\n * The function commits the json file to github. First we need the sha hash,\n * which comes from the etag. This is required for the commit if the file\n * exists.\n *\n * It requires a token, the backupUrl and the file. It is assumed that this is\n * check in the frontend.\n */\nexport const githubBackup = async (json) => {\n    const { backupUrl, headers } = await githubGetBackupUrl();\n    const sha = await githubGetEtag(backupUrl, headers);\n    console.log('sha', sha);\n    const data = {\n        method: 'PUT',\n        headers: headers,\n        body: JSON.stringify({\n            sha: sha,\n            content: utf8_to_b64(JSON.stringify(json)),\n            message: 'backup'\n        }),\n    };\n    const response = await fetch(backupUrl, data).catch(e => {\n        errorStore.addError(`githubBackup - url: ${backupUrl} error: ${e}`);\n    });\n    if (!response) {\n        return;\n    }\n    if (!response.ok) {\n        errorStore.addError(`githubBackup - url: ${backupUrl} error: ${response.statusText}`);\n        return;\n    }\n};\n/**\n * The function loads the restore file.\n *\n * It requires a token, the backupUrl and the file. It is assumed that this is\n * check in the frontend.\n */\nexport const githubRestore = async () => {\n    const { backupUrl, headers } = await githubGetBackupUrl();\n    const json = await githubGetJsonContent(backupUrl, headers);\n    if (!json) {\n        return;\n    }\n    return githubParseJson(json.content);\n};\n","import { dbPromise } from './db';\nimport { hashDelTx } from './hash';\nimport { questRemoveFile } from './questModel';\nimport { storePut, storeDel } from './store';\nimport { arrToMap, arrIsEqual } from './utils';\n/**\n * The function compares two topics, one from the json and one from the store.\n */\nconst topicNeedUpdate = (json, store) => {\n    //\n    // If the topic is not in the store, we have to persist it.\n    //\n    if (!store) {\n        return true;\n    }\n    //\n    // Preserve last learned.\n    //\n    if (store.lastLearned) {\n        json.lastLearned = store.lastLearned;\n    }\n    //\n    // Compare the topic values that came from the topics file.\n    //\n    if (json.title !== store.title ||\n        json.desc !== store.desc ||\n        !arrIsEqual(json.tags, store.tags) ||\n        !arrIsEqual(json.details, store.details)) {\n        return true;\n    }\n    return false;\n};\n/**\n * The function returns a sorted array of unique tags.\n */\nexport const topicsGetTags = (topics) => {\n    const tags = [];\n    //\n    // Iterate over the topics, which contain an array of tags.\n    //\n    topics.forEach((topic) => {\n        //\n        // Iterate over the tags of the topic.\n        //\n        topic.tags.forEach((tag) => {\n            //\n            // Check if our tags array contains this tag\n            //\n            if (!tags.includes(tag)) {\n                tags.push(tag);\n            }\n        });\n    });\n    return tags.sort();\n};\n/**\n * The function gets all topics from the store. It returns a promise with an\n * array of topics.\n */\nexport const topicGetAll = () => {\n    return new Promise(async (resolve, reject) => {\n        const store = (await dbPromise).transaction(['topics'], 'readonly').objectStore('topics');\n        const request = store.getAll();\n        request.onsuccess = (e) => {\n            console.log('Store:', store.name, 'topicGetAll:');\n            resolve(request.result);\n        };\n        request.onerror = (e) => {\n            console.log('Store:', store.name, 'topicGetAll error:', e);\n            reject();\n        };\n    });\n};\n/**\n * The function writes the updated topic to the store.\n */\nexport const topicUpdate = async (topic) => {\n    const store = (await dbPromise).transaction(['topics'], 'readwrite').objectStore('topics');\n    storePut(store, topic);\n};\n/**\n * The function deletes a topic object in the store.\n */\nexport const topicDelTx = (tx, file) => {\n    const store = tx.objectStore('topics');\n    storeDel(store, file);\n};\n/**\n * The function is called with a json array that contains the topics. It\n * deletes all topics from the store, that are not contained in the json and\n * updates the rest.\n */\n// TODO: Wrong place!! If file was removed, then the Question and process stores have to be also removed.\nexport const topicSync = async (json) => {\n    const tx = (await dbPromise).transaction(['topics', 'questions', 'hash'], 'readwrite');\n    const storeTopic = tx.objectStore('topics');\n    const request = storeTopic.getAll();\n    request.onsuccess = (e) => {\n        //\n        // Create a map with the topics and the file as the key.\n        //\n        const storeMap = arrToMap(request.result, 'file');\n        //\n        // Get an array with the files from the json array. The file is the key for\n        // the topics in the store and has to be unique.\n        //\n        const jsonKeys = json.map((item) => item['file']);\n        //\n        // Delete the topics from the store that are not in the json array.\n        //\n        for (let storeKey of storeMap.keys()) {\n            if (!jsonKeys.includes(storeKey)) {\n                topicDelTx(tx, storeKey);\n                hashDelTx(tx, storeKey);\n                questRemoveFile(tx, storeKey);\n            }\n        }\n        //\n        // Update the topics in the store.\n        //\n        json.forEach((jsonItem) => {\n            //\n            // If the topic from the store and from the server are different, we \n            // update the store. \n            //\n            if (topicNeedUpdate(jsonItem, storeMap.get(jsonItem.file))) {\n                storePut(storeTopic, jsonItem);\n            }\n        });\n    };\n};\n","<script lang=\"ts\">\n  import { errorStore } from '../stores/errorStore';\n\n  /**\n   * On the button click, remove the errors from the store.\n   */\n  const onOk = () => {\n    errorStore.resetErrors();\n  };\n</script>\n\n<div class=\"card card-shadow block content\">\n  <h4 class=\"is-text-danger\">Errors</h4>\n  <ul>\n    {#each $errorStore as error}\n      <li>{error}</li>\n    {/each}\n  </ul>\n  <div class=\"is-floating\">\n    <button class=\"button\" on:click={onOk}>Ok</button>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import { fmtDate } from '../js/utils';\n  import type { Topic } from '../js/topicModel';\n  import { onMount } from 'svelte';\n  import { hashGet } from '../js/hash';\n  import type { Hash } from '../js/hash';\n\n  export let topic: Topic;\n  export let status = 0;\n  export let size = 0;\n  export let details = true;\n\n  let hash: Hash;\n\n  /**\n   * Read the hash for the topic.\n   */\n  onMount(async () => {\n    if (details) {\n      hash = await hashGet(topic.file);\n    }\n  });\n</script>\n\n<h4>{topic.title}</h4>\n<table>\n  <tr>\n    <td>Last learned</td>\n    <td>{fmtDate(topic.lastLearned)}</td>\n  </tr>\n  <tr>\n    <td>Tags</td>\n    <td>{topic.tags.join(', ')}</td>\n  </tr>\n  {#if details}\n    <tr>\n      <td>Questions</td>\n      <td>{size}</td>\n    </tr>\n    <tr>\n      <td>Status</td>\n      <td>{status}%</td>\n    </tr>\n    {#if hash}\n      <tr>\n        <td>Last loaded</td>\n        <td>{fmtDate(hash.lastLoaded)}</td>\n      </tr>\n      <tr>\n        <td>Hash</td>\n        <td>{hash.value ? hash.value : ''}</td>\n      </tr>\n    {/if}\n  {/if}\n</table>\n{#if topic.desc}\n  <p>{topic.desc}</p>\n{/if}\n","<script lang=\"ts\">\n  import { viewStore } from '../stores/viewStore';\n  import TopicInfo from './TopicInfo.svelte';\n  import type { Topic } from '../js/topicModel';\n\n  export let topic: Topic;\n\n  /**\n   * Show the topic.\n   */\n  const onClick = (topic: Topic) => {\n    viewStore.setView('ViewTopicInfo', { topic: topic });\n  };\n</script>\n\n<div class=\"card card-shadow content\" id={topic.file}>\n  <TopicInfo {topic} details={false} />\n  <div class=\"is-floating\">\n    <button class=\"button\" on:click={() => onClick(topic)}>Show</button>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import { onMount, afterUpdate } from 'svelte';\n  import { topicGetAll, topicsGetTags } from '../js/topicModel';\n  import TopicCard from './TopicCard.svelte';\n  import type { Topic } from '../js/topicModel';\n  import { viewStore } from '../stores/viewStore';\n\n  //\n  // Id to scroll the view to.\n  //\n  export let id: string | void = null;\n\n  let topicsRaw: Topic[] = [];\n  let topicsView: Topic[] = [];\n\n  let tags: String[];\n\n  let filter: string;\n  let sort: string;\n\n  /**\n   * Sort and filter\n   */\n  const doSortFilter = () => {\n    let tmp: Topic[];\n\n    if (!filter) {\n      tmp = [...topicsRaw];\n    } else {\n      tmp = topicsRaw.filter((t) => t.tags.includes(filter));\n    }\n\n    console.log('sort', sort);\n    if (sort && sort === 'time') {\n      console.log('sorting');\n      tmp.sort((a, b) => {\n        const aTime = a.lastLearned ? a.lastLearned.getTime() : 0;\n        const bTime = b.lastLearned ? b.lastLearned.getTime() : 0;\n        return bTime - aTime;\n      });\n    }\n\n    topicsView = tmp;\n  };\n\n  /**\n   * On mount, get all the topics from the store.\n   */\n  onMount(() => {\n    topicGetAll().then((t) => {\n      topicsRaw = t;\n      topicsView = t;\n      tags = topicsGetTags(topicsRaw);\n    });\n  });\n\n  /**\n   * The function is called after an update. An update can be an empty list.\n   */\n  afterUpdate(() => {\n    if (id) {\n      const elem = document.getElementById(id);\n      if (elem) {\n        elem.scrollIntoView();\n      }\n    }\n  });\n</script>\n\n{#if tags}\n  <div class=\"is-floating\">\n    <label class=\"is-valign-center\" for=\"sort-select\">Sort</label>\n    <select id=\"sort-select\" bind:value={sort} on:change={doSortFilter}>\n      <option value=\"\">-- Select --</option>\n      <option value=\"time\">Last learned</option>\n    </select>\n\n    <label for=\"tag-select\">Tag Filter</label>\n    <select id=\"tag-select\" bind:value={filter} on:change={doSortFilter}>\n      <option value=\"\">-- Select --</option>\n      {#each tags as tag}\n        <option value={tag}>{tag}</option>\n      {/each}\n    </select>\n\n    {#if filter}\n      <button\n        class=\"button\"\n        on:click={() =>\n          viewStore.setView('ViewTagInfo', { tag: filter, topics: topicsView })}\n        >Show</button\n      >\n    {/if}\n    <button class=\"button\" on:click={() => viewStore.setView('ViewTranslate')}\n      >Translate</button\n    >\n    <button class=\"button\" on:click={() => viewStore.setView('ViewHashes')}\n      >Hashes</button\n    >\n    <button class=\"button\" on:click={() => viewStore.setView('ViewAdmin')}\n      >Admin</button\n    >\n  </div>\n{/if}\n\n<div class=\"grid grid-4\">\n  {#each topicsView as topic}\n    <TopicCard {topic} />\n  {/each}\n</div>\n","import { errorStore } from '../stores/errorStore';\n/*******************************************************************************\n * The class defines the mapping of a char (example: *) to a tag (example: <b>).\n * To produce valid html it has to return <b> and </b> pairwise. The check\n * function ensures that the result is balanced.\n ******************************************************************************/\nclass Mapping {\n    constructor(md, tag) {\n        this.count = 0;\n        this.md = md;\n        this.tag = tag;\n    }\n    getTag() {\n        return ++this.count % 2 ? `<${this.tag}>` : `</${this.tag}>`;\n    }\n    check(lines) {\n        if (this.count % 2) {\n            errorStore.addError(`Unbalanced tag: ${this.md} count: ${this.count} data: ${lines}`);\n        }\n        this.count = 0;\n    }\n}\n/*******************************************************************************\n * The class implements a simple markdown generator. It is called with an array\n * of strings and produces an html fragment. It allows lists:\n *\n * - list item\n * - list item\n *\n * *bold* text\n * ~italic~ text\n * _underline_ text\n ******************************************************************************/\nexport default class Markdown {\n    constructor() {\n        this.map = {};\n        this._register('_', 'u');\n        this._register('*', 'b');\n        this._register('~', 'i');\n        this.regex = this._pattern();\n    }\n    _register(chr, tag) {\n        this.map[chr] = new Mapping(chr, tag);\n    }\n    _pattern() {\n        let result = '';\n        for (let m in this.map) {\n            result += m;\n        }\n        return new RegExp(`[${result}]`, 'g');\n    }\n    tag(chr) {\n        if (!this.map.hasOwnProperty(chr)) {\n            errorStore.throwError(`Unknown element: ${chr}`);\n        }\n        return this.map[chr].getTag();\n    }\n    _check(lines) {\n        for (let m in this.map) {\n            this.map[m].check(lines);\n        }\n    }\n    _substitute(line) {\n        const me = this;\n        return line.replaceAll(this.regex, function (elem) {\n            return me.tag(elem);\n        });\n    }\n    /****************************************************************************\n     * The function is called with a line or an array of lines containing\n     * markdown. It return the processed html.\n     ***************************************************************************/\n    toHtml(lines) {\n        if (!Array.isArray(lines)) {\n            lines = [lines];\n        }\n        let inside = false;\n        let result = '';\n        for (let line of lines) {\n            if (line.startsWith('- ')) {\n                if (!inside) {\n                    result += '<ul>';\n                    inside = true;\n                }\n                result += '<li>' + this._substitute(line.substring(2).trim()) + '</li>';\n                continue;\n            }\n            if (inside) {\n                result += '</ul>';\n                inside = false;\n            }\n            else if (result !== '') {\n                result += '<br />';\n            }\n            result += this._substitute(line.trim());\n        }\n        //\n        // If the array ends with list, we need the closing tag.\n        //\n        if (inside) {\n            result += '</ul>';\n        }\n        //\n        // ensure that all is balanced\n        //\n        this._check(lines);\n        return result;\n    }\n}\n","<script lang=\"ts\">\n  import { loadQuestions } from '../js/persist';\n  import { arrPercentage, arrAll } from '../js/utils';\n  import { viewStore } from '../stores/viewStore';\n  import { errorStore } from '../stores/errorStore';\n  import { onMount } from 'svelte';\n  import TopicInfo from './TopicInfo.svelte';\n  import Markdown from '../js/Markdown';\n  import type { Topic } from '../js/topicModel';\n  import type { Question } from '../js/questModel';\n  import { questGetAll, questSetProgressArr } from '../js/questModel';\n\n  export let topic: Topic;\n  export let questions: Question[] | void = null;\n\n  const md = new Markdown();\n\n  //\n  // Properties for the view.\n  //\n  let status = 0;\n  let startDisabled = true;\n  let size = 0;\n\n  /**\n   * The function updates the status of the questions.\n   */\n  const updateStatus = () => {\n    //\n    // If we do not have questions,\n    //\n    if (!questions) {\n      return;\n    }\n    const arr = questions.map((q) => q.progress);\n    status = arrPercentage(arr, 3);\n    startDisabled = arrAll(arr, 3);\n    size = arr.length;\n  };\n\n  /**\n   * On mount we load the questions for the topic and then we update the\n   * properties for this view.\n   */\n  onMount(async () => {\n    try {\n      if (!questions) {\n        // TODO: topic.lastLoaded is set inside the function.\n        await loadQuestions(topic.file);\n\n        console.log('Loading questions for topics');\n        questions = await questGetAll(topic);\n\n        updateStatus();\n      }\n    } catch (error) {\n      errorStore.addError('ViewTopicInfo: ' + error.message);\n    }\n  });\n\n  /**\n   * Callback function for the back button.\n   */\n  const onBack = () => {\n    viewStore.setView('ViewTopicList', { id: topic.file });\n  };\n\n  /**\n   * Callback function for the listing button.\n   */\n  const onListing = () => {\n    viewStore.setView('ViewTopicQuests', { topic: topic });\n  };\n\n  /**\n   * Callback function for the start button.\n   */\n  const onStart = () => {\n    viewStore.setView('ViewQuestAnswer', {\n      topics: [topic],\n      questions: questions\n    });\n  };\n\n  /**\n   * Callback function for the select box.\n   */\n  const onSelect = (e: Event) => {\n    //\n    // Ensure that we have questions.\n    //\n    if (!questions) {\n      return;\n    }\n    const target = e.target as HTMLSelectElement;\n\n    //\n    // Set the number of correct answers.\n    //\n    questSetProgressArr(questions, target.selectedIndex - 1);\n\n    //\n    // Set the index to 0 to restore the orignal state.\n    //\n    target.selectedIndex = 0;\n\n    updateStatus();\n  };\n</script>\n\n<div class=\"card card-shadow content\">\n  <div>\n    <div class=\"is-text-left\">\n      <TopicInfo {topic} {status} {size} />\n    </div>\n\n    <div class=\"is-floating\">\n      <label for=\"sf-set\">Number of correct answers</label>\n      <select id=\"sf-set\" on:change={onSelect}>\n        <option value=\"\">-- Select --</option>\n        <option value=\"0\">Set 0</option>\n        <option value=\"1\">Set 1</option>\n        <option value=\"2\">Set 2</option>\n        <option value=\"3\">Set 3</option>\n      </select>\n    </div>\n\n    {#if topic.details}\n      <div class=\"block\">\n        <h5>Details</h5>\n        <div class=\"card content is-info\">\n          <p>{@html md.toHtml(topic.details)}</p>\n        </div>\n      </div>\n    {/if}\n  </div>\n\n  <div class=\"is-floating\">\n    <button class=\"button\" on:click={onBack}>Back</button>\n    <button class=\"button\" on:click={onListing}>Listing</button>\n    <button class=\"button\" disabled={startDisabled} on:click={onStart}\n      >Start</button\n    >\n  </div>\n</div>\n","// TODO: rename file\nimport { questSync } from './questModel';\nimport { githubGetJson } from './github';\nimport { dbPromise } from './db';\nimport { topicSync } from './topicModel';\n/**\n * Load the questions from the store\n */\nexport const loadQuestions = async (file) => {\n    const json = await githubGetJson(file);\n    if (json) {\n        const tx = (await dbPromise).transaction(['questions'], 'readwrite');\n        questSync(tx, file, json);\n    }\n};\n/**\n * Init app and load topics.\n */\nexport const initApp = async () => {\n    const json = await githubGetJson('data/topics.json');\n    if (json) {\n        topicSync(json);\n    }\n};\n","<script lang=\"ts\">\n  import type { Question } from '../js/questModel';\n\n  export let question: Question;\n</script>\n\n<div class=\"h6\">\n  Progress: <span class=\"is-text-success\">{question.progress}</span> /\n  <span class=\"is-text-success\">3</span>\n\n  <span class=\"hide-sm\">\n    Total: <span class=\"is-text-success\">{question.total}</span> Wrong:\n    <span class=\"is-text-danger\">{question.ratio}%</span>\n  </span>\n</div>\n","<script lang=\"ts\">\n  import QuestProgress from './QuestProgress.svelte';\n  import Markdown from '../js/Markdown';\n  import { createRepeatToggle } from '../js/utils';\n  import type { Question } from '../js/questModel';\n  import { onMount } from 'svelte';\n\n  export let questions: Question[];\n\n  let details: string = '0';\n  let sorted: Question[] = [];\n  let sortBy: String = '';\n\n  const md = new Markdown();\n\n  onMount(() => {\n    console.log('questions', questions);\n    sorted = questions;\n  });\n\n  const doSort = () => {\n    if (!sortBy) {\n      sorted = questions;\n      return;\n    }\n    let tmp: Question[] = [...questions];\n\n    if (sortBy === 'ratio') {\n      tmp.sort((a, b) => {\n        return b.ratio - a.ratio;\n      });\n    } else if (sortBy === 'total') {\n      tmp.sort((a, b) => {\n        return b.total - a.total;\n      });\n    }\n\n    sorted = tmp;\n  };\n\n  //\n  // The function toogles the values after 2 calls.\n  //\n  const repeatToggle = createRepeatToggle(2, 'is-primary', 'is-info');\n</script>\n\n<div class=\"is-floating\">\n  <label for=\"details-select\">Details</label>\n  <select id=\"details-select\" bind:value={details}>\n    <option value=\"0\">Simple</option>\n    <option value=\"1\">Progress</option>\n    <option value=\"2\">ID's</option>\n  </select>\n\n  <label for=\"quest-sort\">Tag Filter</label>\n  <select id=\"quest-sort\" bind:value={sortBy} on:change={doSort}>\n    <option value=\"\">-- Select --</option>\n    <option value=\"total\">Total</option>\n    <option value=\"ratio\">Ratio</option>\n  </select>\n</div>\n\n<div class=\"grid grid-2\">\n  {#each sorted as question}\n    {#if details === '1' || details === '2'}\n      <div class=\"is-flex-spread grid-full\">\n        <div>\n          {#if details === '2'}\n            <span class=\"h6\">Id: {question.id}</span>\n            <span class=\"hide-sm\">{question.file}</span>\n          {/if}\n        </div>\n        <QuestProgress {question} />\n      </div>\n    {/if}\n\n    <div class=\"card {repeatToggle()}\">\n      <div class=\"content\">\n        <p>{@html md.toHtml(question.quest)}</p>\n      </div>\n    </div>\n    <div class=\"card {repeatToggle()}\">\n      <div class=\"content\">\n        <p>{@html md.toHtml(question.answer)}</p>\n      </div>\n    </div>\n  {/each}\n</div>\n","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import QuestArrShow from './QuestArrShow.svelte';\n  import { viewStore } from '../stores/viewStore';\n  import { questGetAll } from '../js/questModel';\n\n  import type { Topic } from '../js/topicModel';\n  import type { Question } from '../js/questModel';\n\n  export let topic: Topic;\n\n  let questions: Question[] = [];\n\n  onMount(() => {\n    questGetAll(topic).then((topicQuests) => {\n      questions = topicQuests;\n    });\n  });\n\n  const onBack = (topic: Topic) => {\n    viewStore.setView('ViewTopicInfo', { topic: topic });\n  };\n</script>\n\n<div class=\"card card-shadow content\">\n  <h4>{topic.title}</h4>\n\n  {#if questions.length !== 0}\n    <QuestArrShow {questions} />\n  {/if}\n\n  <div class=\"is-floating\">\n    <button class=\"button\" on:click={() => onBack(topic)}>Back</button>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import type { Question } from '../js/questModel';\n  import type { Topic } from '../js/topicModel';\n  import { viewStore } from '../stores/viewStore';\n  import { questGetTag, questSetProgressArr } from '../js/questModel';\n  import { errorStore } from '../stores/errorStore';\n\n  export let tag: string;\n  export let topics: Topic[];\n  export let questions: Question[] | void = null;\n\n  let loadQuests = '30';\n  let fraction = 0.6;\n  let loaded = false;\n\n  let correct: -1;\n\n  /**\n   * The callback funciton to show the listing view.\n   */\n  const onListing = () => {\n    viewStore.setView('ViewTagQuests', {\n      tag: tag,\n      topics: topics,\n      questions: questions\n    });\n  };\n\n  /**\n   * The callback functoin to go back.\n   */\n  const onBack = () => {\n    viewStore.setView('ViewTopicList');\n  };\n\n  const onStart = () => {\n    viewStore.setView('ViewQuestAnswer', {\n      tag: tag,\n      topics: topics,\n      questions: questions\n    });\n  };\n\n  const onSelect = (e: Event) => {\n    //\n    // Ensure that we have questions.\n    //\n    if (!questions) {\n      return;\n    }\n    const target = e.target as HTMLSelectElement;\n    //\n    // Set the number of correct answers.\n    //\n    questSetProgressArr(questions, target.selectedIndex - 1);\n\n    //\n    // Set the index to 0 to restore the orignal state.\n    //\n    target.selectedIndex = 0;\n  };\n\n  /**\n   * Callback function for the mount event.\n   */\n  const onLoad = async () => {\n    try {\n      const max = loadQuests === 'all' ? -1 : 30;\n      questions = await questGetTag(topics, max, fraction);\n      loaded = true;\n    } catch (error) {\n      errorStore.addError('ViewTagInfo: ' + error.message);\n    }\n  };\n</script>\n\n<div class=\"card card-shadow content\">\n  <div>\n    <div class=\"is-text-left\">\n      <h4>Tag: {tag}</h4>\n      <p>Files incluging the tag:</p>\n      <ul>\n        {#each topics as topic}\n          <li>{topic.title}</li>\n        {/each}\n      </ul>\n    </div>\n  </div>\n\n  {#if !loaded}\n    <div class=\"is-floating\">\n      <label for=\"load-quests\">Load Questions</label>\n      <select id=\"load-quests\" bind:value={loadQuests}>\n        <option value=\"30\">30</option>\n        <option value=\"all\">All</option>\n      </select>\n    </div>\n\n    <div class=\"is-floating\">\n      <label for=\"relevant\">Fraction</label>\n      <input\n        id=\"relevant\"\n        type=\"number\"\n        min=\"0.2\"\n        max=\"1\"\n        step=\"0.2\"\n        bind:value={fraction}\n      />\n    </div>\n  {:else}\n    <div class=\"is-floating\">\n      <label for=\"sf-set\">Number of correct answers</label>\n      <select id=\"sf-set\" bind:value={correct} on:change={onSelect}>\n        <option value=\"-1\">-- Select --</option>\n        <option value=\"0\">Set 0</option>\n        <option value=\"1\">Set 1</option>\n        <option value=\"2\">Set 2</option>\n      </select>\n    </div>\n  {/if}\n\n  <div class=\"is-floating\">\n    <button class=\"button\" on:click={onBack}>Back</button>\n    {#if loaded}\n      <button class=\"button\" on:click={onListing}>Listing</button>\n      <button class=\"button\" on:click={onStart}>Start</button>\n    {:else}\n      <button class=\"button\" on:click={onLoad}>Load</button>\n    {/if}\n  </div>\n</div>\n","<script lang=\"ts\">\n  import { viewStore } from '../stores/viewStore';\n  import QuestArrShow from './QuestArrShow.svelte';\n  import type { Topic } from '../js/topicModel';\n  import type { Question } from '../js/questModel';\n\n  export let tag: string;\n  export let topics: Topic[];\n  export let questions: Question[] = [];\n\n  const onBack = () => {\n    viewStore.setView('ViewTagInfo', {\n      tag: tag,\n      topics: topics,\n      questions: questions\n    });\n  };\n</script>\n\n<div class=\"card card-shadow content\">\n  <h4>Tag: {tag}</h4>\n\n  <QuestArrShow {questions} />\n\n  <div class=\"is-floating\">\n    <button class=\"button\" on:click={() => onBack()}>Back</button>\n  </div>\n</div>\n","<script lang=\"ts\">\n  export let statistic = [0, 0, 0, 0];\n</script>\n\n<table class=\"table hide-md\">\n  <tr>\n    <td>No correct Answers</td>\n    <td>{statistic[0]}</td>\n  </tr>\n  <tr>\n    <td>One correct Answer</td>\n    <td>{statistic[1]}</td>\n  </tr>\n  <tr>\n    <td>Two correct Answers</td>\n    <td>{statistic[2]}</td>\n  </tr>\n  <tr>\n    <td>Learned</td>\n    <td>{statistic[3]}</td>\n  </tr>\n</table>\n","<script lang=\"ts\">\n  import Markdown from '../js/Markdown';\n  import QuestProgress from './QuestProgress.svelte';\n  import type { Topic } from '../js/topicModel';\n  import type { Question } from '../js/questModel';\n\n  export let question: Question;\n  export let topic: Topic;\n  export let hideAnswer: boolean;\n\n  const md = new Markdown();\n</script>\n\n<div class=\"grid grid-2\">\n  <div>\n    <div class=\"is-flex-spread block\">\n      <div class=\"h5\">Question: {question.id}</div>\n      <QuestProgress {question} />\n    </div>\n\n    <div class=\"card content is-primary\">\n      <p>{@html md.toHtml(question.quest)}</p>\n    </div>\n  </div>\n\n  <div hidden={hideAnswer}>\n    <h5>Answer</h5>\n    <div class=\"card content is-info\">\n      <p>{@html md.toHtml(question.answer)}</p>\n      {#if topic.details}\n        <p>{@html md.toHtml(topic.details)}</p>\n      {/if}\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { viewStore } from '../stores/viewStore';\n  import QuestStatistic from './QuestStatistic.svelte';\n  import { shuffleArr } from '../js/utils';\n  import {\n    questPersist,\n    questOnAnswer,\n    questGetStatistics\n  } from '../js/questModel';\n\n  import type { Topic } from '../js/topicModel';\n  import type { Question } from '../js/questModel';\n  import QuestAnswer from './QuestAnswer.svelte';\n  import { topicUpdate } from '../js/topicModel';\n\n  export let tag: string | void = null;\n\n  export let topics: Topic[];\n  let topic: Topic;\n\n  export let questions: Question[];\n  let question: Question;\n\n  let statistic: number[];\n\n  let hideAnswer = true;\n\n  let unlearned: Question[];\n\n  const handleAnswer = (isCorrect?: boolean) => {\n    //\n    // On skip, we do not update the statistik and go to the next.\n    //\n    if (typeof isCorrect === 'undefined') {\n      unlearned.push(question);\n      next();\n      return;\n    }\n\n    questOnAnswer(question, isCorrect);\n\n    questPersist(question).then(() => {\n      if (question.progress < 3) {\n        unlearned.push(question);\n      }\n\n      if (unlearned.length === 0) {\n        onStop();\n      }\n\n      next();\n    });\n  };\n\n  /**\n   * The function setup the view for the next question.\n   */\n  const next = () => {\n    question = unlearned.shift();\n    topic = topics.find((t) => t.file === question.file);\n    statistic = questGetStatistics(questions);\n    hideAnswer = true;\n    console.log('next', question);\n  };\n\n  /**\n   * Callback function for the mount event.\n   */\n  onMount(() => {\n    unlearned = questions.filter((q) => q.progress < 3);\n    shuffleArr(unlearned);\n    next();\n  });\n\n  /**\n   * Callback function for the stop button.\n   */\n  const onStop = () => {\n    if (topic) {\n      topic.lastLearned = new Date();\n      topicUpdate(topic);\n      viewStore.setView('ViewTopicList', { id: topic.file });\n    } else {\n      viewStore.setView('ViewTopicList');\n    }\n  };\n</script>\n\n{#if question}\n  <div class=\"card card-shadow content\">\n    {#if tag}\n      <h4>Tag: {tag}</h4>\n      <h6>{topic.title}</h6>\n    {:else}\n      <h4>{topic.title}</h4>\n    {/if}\n\n    <QuestStatistic {statistic} />\n\n    <QuestAnswer {topic} {question} {hideAnswer} />\n\n    <!-- Buttons related to questions and answers -->\n    <div class=\"is-floating\">\n      <button\n        class=\"button\"\n        hidden={!hideAnswer}\n        on:click={() => (hideAnswer = false)}>Show</button\n      >\n      <button\n        class=\"button is-success\"\n        hidden={hideAnswer}\n        on:click={() => handleAnswer(true)}>Correct</button\n      >\n      <button\n        class=\"button is-danger\"\n        hidden={hideAnswer}\n        on:click={() => handleAnswer(false)}>Wrong</button\n      >\n      <button\n        class=\"button is-warning\"\n        hidden={hideAnswer}\n        on:click={() => handleAnswer()}>Skip</button\n      >\n      <button class=\"button\" on:click={onStop}>Stop</button>\n    </div>\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import { viewStore } from '../stores/viewStore';\n  import { errorStore } from '../stores/errorStore';\n\n  let srcLabel = 'German';\n  let dstLabel = 'Russian';\n\n  let srcLang = 'de';\n  let dstLang = 'ru';\n\n  let srcValue: string = '';\n  let dstValue: string = '';\n\n  /**\n   * The function calls the translation api.\n   */\n  const onTranslate = () => {\n    if (!srcValue) {\n      return;\n    }\n\n    fetch('https://libretranslate.de/translate', {\n      method: 'POST',\n      body: JSON.stringify({\n        q: srcValue,\n        source: srcLang,\n        target: dstLang,\n        format: 'text'\n      }),\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .then((res) => {\n        if (!res.ok) {\n          errorStore.addError(`Unable to get JSON: ${res.statusText}`);\n        }\n        return res.json();\n      })\n      .then((json) => {\n        dstValue = json['translatedText'];\n      });\n  };\n\n  /**\n   * The function switches the\n   */\n  const onSwitch = () => {\n    if (srcLang === 'de') {\n      srcLabel = 'Russian';\n      dstLabel = 'German';\n\n      srcLang = 'ru';\n      dstLang = 'de';\n    } else {\n      srcLabel = 'German';\n      dstLabel = 'Russian';\n\n      srcLang = 'de';\n      dstLang = 'ru';\n    }\n\n    srcValue = dstValue;\n\n    onTranslate();\n  };\n\n  /**\n   * The function resets the translation values.\n   */\n  const onReset = () => {\n    srcValue = '';\n    dstValue = '';\n  };\n\n  /**\n   * The function selets the back view.\n   */\n  const onBack = () => {\n    viewStore.setView('ViewTopicList');\n  };\n</script>\n\n<h4>Translate</h4>\n\n<label for=\"src\">{srcLabel}</label>\n<textarea id=\"src\" bind:value={srcValue} />\n\n<label for=\"dst\">{dstLabel}</label>\n<textarea id=\"dst\" readonly value={dstValue} />\n\n<div class=\"is-floating\">\n  <button class=\"button\" on:click={() => onBack()}>Back</button>\n  <button class=\"button\" on:click={() => onTranslate()}>Translate</button>\n  <button class=\"button\" on:click={() => onReset()}>Reset</button>\n  <button class=\"button\" on:click={() => onSwitch()}>Switch</button>\n</div>\n\n<p>\n  The translation is done with <a href=\"https://libretranslate.de/\"\n    >LibreTranslate</a\n  >\n</p>\n","<script lang=\"ts\">\n  import { viewStore } from '../stores/viewStore';\n  import { onMount } from 'svelte';\n  import { hashGetAll, hashDel } from '../js/hash';\n  import type { Hash } from '../js/hash';\n  import { fmtDate } from '../js/utils';\n\n  let hashes: Hash[] = [];\n\n  let filter: string = 'file';\n\n  const doFilter = () => {\n    console.log('sort', filter);\n    hashes.sort((b, a) => +(a[filter] > b[filter]) || -(a[filter] < b[filter]));\n    hashes = hashes;\n  };\n\n  const doLoad = async () => {\n    hashes = await hashGetAll();\n    doFilter();\n  };\n\n  const doDelete = async (file: string) => {\n    await hashDel(file);\n    doLoad();\n  };\n\n  const onBack = () => {\n    viewStore.setView('ViewTopicList');\n  };\n\n  onMount(() => {\n    doLoad();\n  });\n</script>\n\n<div class=\"is-floating\">\n  <label for=\"sort-select\">Tag Filter</label>\n  <select id=\"sort-select\" bind:value={filter} on:change={doFilter}>\n    <option value=\"file\">By Name</option>\n    <option value=\"lastLoaded\">By Date</option>\n  </select>\n</div>\n\n<table>\n  <tr>\n    <th>File</th>\n    <th>Hash</th>\n    <th>Last Loaded</th>\n    <th />\n  </tr>\n  {#each hashes as hash}\n    <tr>\n      <td>{hash.file}</td>\n      <td>{hash.value}</td>\n      <td>{fmtDate(hash.lastLoaded)}</td>\n      <td\n        ><button class=\"button\" on:click={() => doDelete(hash.file)}\n          >Delete</button\n        ></td\n      >\n    </tr>\n  {/each}\n</table>\n\n<div class=\"is-floating\">\n  <button class=\"button\" on:click={() => onBack()}>Back</button>\n</div>\n","<script lang=\"ts\">\n  import type { Admin } from '../js/admin';\n\n  export let admin: Admin;\n</script>\n\n<table>\n  <tr>\n    <td>Github URL Language</td>\n    <td>{admin.langUrl}</td>\n  </tr>\n  <tr>\n    <td>Github URL Backup</td>\n    <td>{admin.backupUrl ? admin.backupUrl : ''}</td>\n  </tr>\n  <tr>\n    <td>Github File</td>\n    <td>{admin.file ? admin.file : ''}</td>\n  </tr>\n  <tr>\n    <td>Token</td>\n    <td>\n      {#if admin.token}\n        ...{admin.token.substring(admin.token.length - 3)}\n      {/if}\n    </td>\n  </tr>\n</table>\n","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n\n  export let title = '';\n  export let msg = '';\n  export let doShow = false;\n\n  const dispatch = createEventDispatcher();\n</script>\n\n<div class=\"popup\" style:display={doShow ? 'block' : 'none'}>\n  <div class=\"popup-content\">\n    <h5>{title}</h5>\n    <p>{msg}</p>\n    <div class=\"is-floating\">\n      <button class=\"button\" on:click={() => dispatch('popup', 'ok')}>OK</button\n      >\n      <button class=\"button\" on:click={() => dispatch('popup', 'cancel')}\n        >Cancel</button\n      >\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import { viewStore } from '../stores/viewStore';\n  import { onMount } from 'svelte';\n  import { adminGet, adminPut } from '../js/admin';\n  import type { Admin } from '../js/admin';\n  import { questGetBackup, questSetRestore } from '../js/questModel';\n  import { githubRestore, githubBackup } from '../js/github';\n  import AdminShow from './AdminShow.svelte';\n  import Popup from './Popup.svelte';\n\n  let admin: Admin;\n  let update: boolean = false;\n  let status: string = '';\n\n  const handleSubmit = (e) => {\n    if (admin.langUrl) {\n      adminPut(admin);\n    }\n    update = false;\n  };\n\n  onMount(async () => {\n    admin = await adminGet();\n  });\n\n  const onBack = () => {\n    viewStore.setView('ViewTopicList');\n  };\n\n  const onBackup = async () => {\n    const backup = await questGetBackup();\n    githubBackup(backup);\n    status = 'Backup done!';\n  };\n\n  const onRestore = async () => {\n    const json = await githubRestore();\n    if (json) {\n      questSetRestore(json);\n      status = 'Restore done!';\n    }\n  };\n\n  enum PopupType {\n    Backup,\n    Restore\n  }\n\n  let title: string;\n  let msg: string;\n  let showPopup = false;\n  let callback: () => void;\n\n  const doShowPopup = (type: PopupType) => {\n    switch (type) {\n      case PopupType.Backup:\n        title = 'Information';\n        msg = 'Do you realy want to create a backup?';\n        callback = onBackup;\n        break;\n      case PopupType.Restore:\n        title = 'Warning';\n        msg = 'Do you realy want to restore the backup?';\n        callback = onRestore;\n        break;\n      default:\n        console.log('Unkown type', type);\n        break;\n    }\n\n    showPopup = true;\n  };\n\n  const handlePopup = (event: CustomEvent) => {\n    showPopup = false;\n    if (event.detail !== 'ok') {\n      return;\n    }\n    callback();\n  };\n</script>\n\n<h4>Configuration</h4>\n{#if status}\n  <div class=\"block is-text-success\">{status}</div>\n{/if}\n\n{#if admin}\n  {#if update}\n    <form on:submit|preventDefault={handleSubmit}>\n      <div class=\"block\">\n        <label for=\"langUrl\">Github URL Language</label>\n        <input id=\"langUrl\" type=\"url\" bind:value={admin.langUrl} />\n\n        <label for=\"backupUrl\">Github URL Backup</label>\n        <input id=\"backupUrl\" type=\"url\" bind:value={admin.backupUrl} />\n\n        <label for=\"file\">Github File</label>\n        <input id=\"file\" type=\"text\" bind:value={admin.file} />\n\n        <label for=\"token\">Token</label>\n        <input id=\"token\" type=\"password\" bind:value={admin.token} />\n      </div>\n\n      <div class=\"is-floating\">\n        <button class=\"button\">Save</button>\n        <button class=\"button\" on:click={() => (update = false)}>Cancel</button>\n        <button class=\"button\" on:click={onBack}>Back</button>\n      </div>\n    </form>\n  {:else}\n    <div class=\"block\">\n      <AdminShow {admin} />\n      <div class=\"is-floating\">\n        <button class=\"button\" on:click={onBack}>Back</button>\n        <button class=\"button\" on:click={() => (update = true)}>Update</button>\n        {#if admin.file && admin.backupUrl && admin.token}\n          <button class=\"button\" on:click={() => doShowPopup(PopupType.Backup)}\n            >Backup</button\n          >\n          <button class=\"button\" on:click={() => doShowPopup(PopupType.Restore)}\n            >Restore</button\n          >\n        {/if}\n      </div>\n    </div>\n  {/if}\n{/if}\n\n<Popup {title} {msg} on:popup={handlePopup} doShow={showPopup} />\n","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n\n  import { viewStore } from './stores/viewStore';\n  import { errorStore } from './stores/errorStore';\n\n  import { initApp } from './js/persist';\n  import { pwaSerivceWorkerRegister } from './js/pwa';\n\n  import ErrorShow from './components/ErrorShow.svelte';\n\n  import ViewTopicList from './components/ViewTopicList.svelte';\n  import ViewTopicInfo from './components/ViewTopicInfo.svelte';\n  import ViewTopicQuests from './components/ViewTopicQuests.svelte';\n  import ViewTagInfo from './components/ViewTagInfo.svelte';\n  import ViewTagQuests from './components/ViewTagQuests.svelte';\n  import ViewQuestAnswer from './components/ViewQuestAnswer.svelte';\n  import ViewTranslate from './components/ViewTranslate.svelte';\n  import ViewHashes from './components/ViewHashes.svelte';\n  import ViewAdmin from './components/ViewAdmin.svelte';\n\n  onMount(() => {\n    try {\n      pwaSerivceWorkerRegister();\n    } catch (error) {\n      errorStore.addError('App onMount(): ' + error);\n    }\n\n    //\n    // Register the views\n    //\n    viewStore.views = {\n      ViewTopicList: {\n        component: ViewTopicList\n      },\n      ViewTopicInfo: {\n        component: ViewTopicInfo\n      },\n      ViewTopicQuests: {\n        component: ViewTopicQuests\n      },\n      ViewTagInfo: {\n        component: ViewTagInfo\n      },\n      ViewTagQuests: {\n        component: ViewTagQuests\n      },\n      ViewQuestAnswer: {\n        component: ViewQuestAnswer\n      },\n      ViewTranslate: {\n        component: ViewTranslate\n      },\n      ViewHashes: {\n        component: ViewHashes\n      },\n      ViewAdmin: {\n        component: ViewAdmin\n      }\n    };\n    //\n    // Set the view if the initialization of the app finished.\n    //\n    initApp().then(() => {\n      viewStore.setView('ViewTopicList');\n    });\n  });\n</script>\n\n<div class=\"container\">\n  <h2>Cards</h2>\n\n  <!-- \n    Calling a view can cause an error, so if you hide the view until you\n    confirmed the error and the show the view again, you repeat the error and\n    you end up in a loop.\n  -->\n  {#if $errorStore.length !== 0}\n    <ErrorShow />\n  {/if}\n\n  <div id=\"main\" class=\"block\">\n    <svelte:component this={$viewStore.component} {...$viewStore.props} />\n  </div>\n\n  <div class=\"block\">\n    <div class=\"is-text-right\">by Volker Senkel 2021</div>\n  </div>\n</div>\n","/**\n * PWA service worker registration.\n */\nexport const pwaSerivceWorkerRegister = async () => {\n    if ('serviceWorker' in navigator) {\n        //\n        // Finish registration, before we init app.\n        //\n        const registration = await navigator.serviceWorker.register('service-worker.js');\n        console.log('Registration of serivce worker done - scope:', registration.scope);\n    }\n};\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n    props: {},\n});\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","cancelable","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","viewStore","views","setView","id","view","createViewStore","errorStore","addError","error","errors","throwError","resetErrors","console","log","createErrorStore","onError","dbPromise","reject","request","indexedDB","open","onupgradeneeded","db","result","oldVersion","objectStoreNames","contains","createObjectStore","keyPath","storeQuest","autoIncrement","indexNames","createIndex","unique","transaction","oncomplete","deleteObjectStore","initAndUpdate","onerror","onsuccess","fmtDate","day","getDate","getMonth","month","hour","getHours","minute","getMinutes","getFullYear","arrToMap","arr","prop","elem","hasOwnProperty","arrIsEqual","arr1","arr2","a2","toString","percentage","num","total","Math","round","shuffleArr","j","min","max","floor","random","tmp","storeDel","storePut","put","questRemoveFile","tx","file","storeName","idxName","idxValue","objectStore","getAllKeys","storeDeleteIndex","questGetAll","async","topic","questGetAllTx","getAll","questSetProgressArr","quests","promises","quest","progress","all","questSync","json","jMap","sMap","to","failed","ratio","questCopyPart","get","questInit","storeAdd","questSetRestore","restore","questGet","hashGet","hash","hashDelTx","adminGet","admin","config","langUrl","backupUrl","token","githubParseJson","content","JSON","parse","str","decodeURIComponent","escape","window","atob","githubGetHeader","Accept","authorization","githubGetBackupUrl","headers","githubGetEtag","url","response","fetch","method","catch","status","ok","statusText","etag","startsWith","substring","githubGetJsonContent","githubGetJson","fileUrl","githubGetFileUrl","etagCheck","githubCheckEtag","sha","lastLoaded","Date","hashPut","topicDelTx","topicSync","storeTopic","storeMap","jsonKeys","item","storeKey","includes","jsonItem","lastLearned","title","desc","tags","details","topicNeedUpdate","li","t","t_value","div1","h4","ul","div0","button","create_if_block_2","tr0","td0","td1","tr1","td2","td3","t6_value","t2","t2_value","t6","t0_value","t8_value","join","create_if_block_1","if_block1","create_if_block","table","t0","t4","t4_value","t8","$$invalidate","div1_id_value","current","onClick","select0","select1","div","label0","option0","option1","label1","option2","button0","button1","button2","each_blocks","sort","topicsRaw","topicsView","topics","tag","topicsGetTags","getElementById","scrollIntoView","aTime","getTime","Mapping","constructor","md","count","getTag","check","lines","Markdown","_register","regex","_pattern","chr","RegExp","_check","_substitute","line","me","replaceAll","toHtml","isArray","inside","trim","raw_value","h5","innerHTML","if_block","div4","div2","label","option3","option4","div3","questions","startDisabled","updateStatus","q","sum","arrPercentage","val","arrAll","loadQuestions","message","t1_value","span0","span1","span4","span2","span3","t1","question","t3_value","t3","raw0_value","raw1_value","answer","p0","p1","option5","sorted","sortBy","repeatToggle","repeat","first","second","createRepeatToggle","topicQuests","onBack","correct","loadQuests","fraction","loaded","numQuests","arrOfArr","concat","part","questGetTag","t10_value","t14_value","tr2","td4","td5","tr3","td6","td7","t10","t14","statistic","div6","div5","hideAnswer","button3","button4","h6","unlearned","handleAnswer","isCorrect","next","questOnAnswer","onStop","shift","find","questGetStatistics","topicUpdate","textarea0","textarea1","srcLabel","dstLabel","srcLang","dstLang","srcValue","dstValue","onTranslate","body","stringify","source","format","res","onSwitch","onReset","tr","hashes","doFilter","doLoad","doDelete","hashDel","msg","doShow","dispatch","form","input0","input1","label2","input2","label3","input3","preventDefault","create_if_block_3","onBackup","btoa","unescape","encodeURIComponent","githubBackup","openCursor","cursor","continue","onRestore","githubRestore","PopupType","showPopup","doShowPopup","Backup","Restore","adminPut","switch_instance_spread_levels","switch_value","h2","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","get_spread_update","spread_props","navigator","registration","serviceWorker","register","scope","pwaSerivceWorkerRegister","ViewTopicList","ViewTopicInfo","ViewTopicQuests","ViewTagInfo","ViewTagQuests","ViewQuestAnswer","ViewTranslate","ViewHashes","ViewAdmin","initApp"],"mappings":"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"}
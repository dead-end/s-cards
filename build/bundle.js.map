{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores/viewStore.js","../../src/js/fetch.js","../../src/js/store.js","../../src/js/db.js","../../src/js/utils.js","../../src/js/topicModel.js","../../src/js/questModel.js","../../src/js/dbConfig.js","../../src/js/persist.js","../../src/js/pwa.js","../../src/components/Header.svelte","../../src/components/Footer.svelte","../../src/components/TopicCard.svelte","../../src/components/TopicList.svelte","../../src/components/TopicShow.svelte","../../src/components/QuestList.svelte","../../src/components/QuestStatistic.svelte","../../src/components/QuestShow.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.6' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n\nconst createViewStore = () => {\n  const { subscribe, set, update } = writable({});\n\n  return {\n    views: {},\n    subscribe,\n\n    setView: (id, props) => {\n      const view = viewStore.views[id];\n      view.props = props;\n      set(view);\n    },\n  };\n};\n\nexport const viewStore = createViewStore();\n","/**\n * The function fetches an url with json data and returns a Promise for that\n * json data.\n *\n * @param {String} url The url to fetch.\n * @returns A promise for the json data.\n */\nexport const fetchJson = (url) => {\n  return fetch(url)\n    .then((response) => response.json())\n    .catch((e) => console.error(e));\n};\n\n/**\n * The funciton call an url with a HEAD request an returns the last modified\n * value as a Date instance.\n *\n * @param {String} url The url to fetch.\n * @returns A promise for the last modified Date\n */\nexport const fetchLastModified = (url) => {\n  return fetch(url, { method: 'HEAD' })\n    .then((response) => {\n      //\n      // Get the last modified from the response.\n      //\n      const lastModified = response.headers.get('Last-Modified');\n      console.log('url: ', url, ' header: ', lastModified);\n\n      //\n      // Ensure that the header exists.\n      //\n      if (lastModified) {\n        return new Date(lastModified);\n      }\n    })\n    .catch((e) => console.error(e));\n};\n","/**\n * The function is called with a transaction for a store, that has an index\n * with a given name. It deletes all elements from the store that have an index\n * with the value.\n *\n * @param {IDBTransaction} tx Transaction\n * @param {String} storeName Name of the store.\n * @param {String} idxName Name of the index.\n * @param {String} idxValue Value of the index.\n * @returns A Promise.\n */\nexport const storeDeleteIndex = (tx, storeName, idxName, idxValue) => {\n  return new Promise((resolve, reject) => {\n    //\n    // Get the store from the transaction.\n    //\n    const store = tx.objectStore(storeName);\n\n    //\n    // Get an array with the keys of the matching objects,\n    //\n    store.index(idxName).getAllKeys(idxValue).onsuccess = (e) => {\n      const keys = e.target.result;\n\n      //\n      // Delete all objects with their keys,\n      //\n      keys.forEach((key) => {\n        store.delete(key).onsuccess = (e) => {\n          console.log('Store: ', store.name, ' deleted: ', key);\n        };\n      });\n\n      //\n      // Resolve after all elements are deleted.\n      //\n      resolve();\n    };\n  });\n};\n\n/**\n * The function is called with a transaction for a store with a given name and\n * an array of objects. All elements of the array are added to the store.\n *\n * @param {IDBTransaction} tx Transaction\n * @param {String} storeName Name of the store.\n * @param {Array} arr Array with the objects.\n * @returns The function returns a Promise.\n */\nexport const storeAddAll = (tx, storeName, arr) => {\n  return new Promise((resolve, reject) => {\n    //\n    // Get the store from the transaction.\n    //\n    const store = tx.objectStore(storeName);\n\n    arr.forEach((item) => {\n      store.add(item).onsuccess = (e) => {\n        console.log('Store: ', store.name, '  added: ', item);\n      };\n    });\n\n    //\n    // Resolve after all elements are added.\n    //\n    resolve();\n  });\n};\n","export let db;\n\n/**\n * Simple error callback function.\n *\n * @param {*} event\n */\nconst onError = (e) => {\n  console.error(e.target.error);\n};\n\n/**\n * The function create the object stores and indices.\n *\n * @param {IDBVersionChangeEvent} e\n */\nconst onUpgradeNeeded = (e) => {\n  if (e.oldVersion < 1) {\n    db = e.target.result;\n\n    //\n    // Create topics store\n    //\n    const storeTopics = db.createObjectStore('topics', {\n      keyPath: 'file',\n    });\n\n    //\n    // Create questions store\n    //\n    const storeQuest = db.createObjectStore('questions', {\n      keyPath: 'id',\n    });\n    storeQuest.createIndex('file', 'file', { unique: false });\n\n    //\n    // Create config store\n    //\n    const storeConfig = db.createObjectStore('config', {\n      keyPath: 'key',\n    });\n\n    storeConfig.transaction.oncomplete = () => {\n      console.log('Upgrade completed!');\n    };\n  }\n};\n\n/**\n * The function iniitalizes the indexed db.\n */\nexport const dbInit = () => {\n  return new Promise((resolve, reject) => {\n    //\n    // Open db request for version 1.\n    //\n    const request = indexedDB.open('s-card', 1);\n\n    //\n    // Callback function for creating or upgrading the db.\n    //\n    request.onupgradeneeded = onUpgradeNeeded;\n\n    //\n    // Error handling callback function for the opening request.\n    //\n    request.onerror = onError;\n\n    request.onsuccess = (e) => {\n      //\n      //\n      //\n      db = e.target.result;\n\n      //\n      // Centeralized error handling callback function.\n      //\n      db.onerror = onError;\n      console.log('db init success!');\n      resolve();\n    };\n  });\n};\n","/**\n * The function returns a formated date value or an empty string if the date is\n * not defined.\n *\n * @param {Date} date The date to be formatted.\n * @returns A string with the formatted date.\n */\nexport function fmtDate(date) {\n  //\n  // Handle empty dates.\n  //\n  if (!date) {\n    return '';\n  }\n\n  const d = new Date();\n  d.setTime(date);\n\n  const day = d.getDate() > 9 ? d.getDate() : '0' + d.getDate();\n  const month = d.getMonth() > 9 ? d.getMonth() : '0' + d.getMonth();\n  const hour = d.getHours() > 9 ? d.getHours() : '0' + d.getHours();\n  const minute = d.getMinutes() > 9 ? d.getMinutes() : '0' + d.getMinutes();\n\n  return `${day}.${month}.${d.getFullYear()} ${hour}:${minute}`;\n}\n\n/**\n * The function is called with an array of objects. Each object should have\n * property named 'prop'. The function returns a map of the objects and the\n * key is the property.\n *\n * @param {Array} arr Array of objects.\n * @param {string} prop The name of a unique property of the objects.\n * @returns A map of objects with the key 'prop'.\n */\nexport const arrToMap = (arr, prop) => {\n  const map = new Map();\n  arr.forEach((elem) => {\n    map.set(elem[prop], elem);\n  });\n  return map;\n};\n\n/**\n * The function is called with an array and a value. The function checks if all\n * of the array values have the given value.\n *\n * @param {Array<number>} arr The array with values.\n * @param {number} val The expected value.\n * @returns True or false.\n */\nexport const arrAll = (arr, val) => {\n  for (let i in arr) {\n    if (arr[i] !== val) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * The function is called with an array of integers. Each can have a max value.\n * The function computes a percentage string from the values. 100% means that\n * all entries have the max value.\n *\n * @param {Array<number>} arr An array of integers.\n * @param {number} max The integer value that is 100%.\n * @returns The function returns a string with the percent value.\n */\nexport const arrPercentage = (arr, max) => {\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    sum += arr[i];\n  }\n\n  return percentage(sum, arr.length * max);\n};\n\n/**\n * The function returns a percentage for a fraction of a total value.\n *\n * @param {number} num The fraction of the total value.\n * @param {number} total The integer value that is 100%.\n * @returns The function returns a string with the percent value.\n */\nexport const percentage = (num, total) => {\n  const result = (num * 100) / total;\n  return result.toFixed(0) + '%';\n};\n\n/**\n * The function returns a random number between min and max. Both are included\n * and it is assumed that both parameters are integers.\n *\n * @param {number} min The minimum value, included.\n * @param {number} max The maximum value,  included.\n * @returns a random number\n */\nfunction getRandomIntInclusive(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * The function shuffles an array in place.\n *\n * @param {Array<any>} arr The array to shuffle.\n */\nexport function shuffleArr(arr) {\n  for (let i = 0; i < arr.length; i++) {\n    //\n    // Get a random index of the array\n    //\n    let j = getRandomIntInclusive(0, arr.length - 1);\n\n    //\n    // Ensure that there is something to do\n    //\n    if (i === j) {\n      continue;\n    }\n\n    //\n    // Swap i and j\n    //\n    let tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n  }\n}\n\n/**\n * The function creates a toogling function, which toogles two string values \n * after 'repeat' calls.\n * \n * @param {number} repeat Return the same then toogle.\n * @param {string} first The first value.\n * @param {string} second The second value.\n * @returns The toogled value.\n */\nexport const createRepeatToggle = (repeat, first, second) => {\n  let count = 0;\n\n  return () => {\n    return (count++ % (2 * repeat) < repeat) ? first : second;\n  }\n};","import { db } from './db';\nimport { arrToMap } from './utils';\n\n/**\n * The function reads the last modified date from the topics store for a given\n * file.\n *\n * @param {String} file Name of the file, which is the id.\n * @returns A Promise.\n */\nexport const topicGetLastModified = (file) => {\n  return new Promise((resolve, reject) => {\n    //\n    // Create a transaction for the topics store.\n    //\n    const store = db.transaction(['topics'], 'readonly').objectStore('topics');\n\n    store.get(file).onsuccess = (e) => {\n      //\n      // Get the topic object from the store. It is possible that the value is\n      // undefined.\n      //\n      const lastModified = e.target.result.lastModified;\n      console.log('Store:', store.name, ' get lastModified:', lastModified);\n      resolve(lastModified);\n    };\n  });\n};\n\n/**\n * The function stores the last modified date of a topic file in the topic\n * store.\n *\n * @param {IDBTransaction} tx\n * @param {String} file\n * @param {Date} lastModified\n */\nexport const topicSetLastModified = (tx, file, lastModified) => {\n  const store = tx.objectStore('topics');\n  store.get(file).onsuccess = (e) => {\n    //\n    // Get the topic from the store and set the last modified date.\n    //\n    const topic = e.target.result;\n    topic.lastModified = lastModified;\n\n    //\n    // Write the updated tpic to the store.\n    //\n    store.put(topic).onsuccess = () => {\n      console.log('Store:', store.name, ' set lastModified:', topic);\n    };\n  };\n};\n\n/**\n * The function gets all topics from the store.\n *\n * @returns A Promise for the array with the topics.\n */\nexport const topicGetAll = () => {\n  return new Promise((resolve, reject) => {\n    const store = db.transaction(['topics'], 'readonly').objectStore('topics');\n\n    store.getAll().onsuccess = (e) => {\n      resolve(e.target.result);\n    };\n  });\n};\n\n/**\n * The function is called with a json array that contains the topics. It\n * deletes all topics from the store, that are not contained in the json and\n * updates the rest.\n *\n * @param {Array} json\n */\n\n// TODO: Wrong place!! If file was removed, then the Question and process stores have to be also removed.\n\nexport const topicSync = (json) => {\n  const store = db.transaction(['topics'], 'readwrite').objectStore('topics');\n\n  store.getAll().onsuccess = (e) => {\n    //\n    // Create a map with the topics and the file as the key.\n    //\n    const storeMap = arrToMap(e.target.result, 'file');\n\n    //\n    // Get an array with the files from the json array. The file is the key for\n    // the topics in the store and has to be unique.\n    //\n    const jsonKeys = json.map((item) => item['file']);\n\n    //\n    // Delete the topics from the store that are not in the json array.\n    //\n    for (let storeKey in storeMap) {\n      if (!jsonKeys.includes(storeKey)) {\n        store.delete(storeKey).onsuccess = () => {\n          console.log('Store:', store.name, ' deleted:', storeKey);\n        };\n      }\n    }\n\n    //\n    // Update the topics in the store.\n    //\n    json.forEach((jsonItem) => {\n      //\n      // Copy last modified if present.\n      //\n      const storeItem = storeMap.get(jsonItem.file);\n      if (storeItem && storeItem.lastModified) {\n        jsonItem.lastModified = storeItem.lastModified;\n      }\n\n      store.put(jsonItem).onsuccess = (e) => {\n        console.log('Store:', store.name, ' update:', e.target.result);\n      };\n    });\n  };\n};","// TODO: nename file => questModel.js\n// function questPersist, questGetAll,\n// questOnAnswer\n\nimport { db } from './db';\nimport { percentage } from './utils';\n\n/**\n * The function sets all 'current' properties from questions from a given file\n * to a given value.\n *\n * @param {string} file The file name for the questions.\n * @param {number} value The new value.\n */\nexport const questSetProgress = (file, value) => {\n  //\n  // We are only interested in questions from a given file.\n  //\n  const range = IDBKeyRange.only(file);\n\n  const store = db\n    .transaction(['questions'], 'readwrite')\n    .objectStore('questions');\n\n  store.index('file').openCursor(range).onsuccess = (e) => {\n    const cursor = e.target.result;\n    if (cursor) {\n      const elem = cursor.value;\n      //\n      // Ensure that we need to update the value in the store.\n      //\n      if (elem.progress !== value) {\n        elem.progress = value;\n        elem.failed = 0;\n        store.put(elem);\n        console.log('Store:', store.name, ' update:', elem.id);\n      }\n\n      cursor.continue();\n    }\n    //\n    // The cursor has finished.\n    //\n    else {\n      console.log('Store:', store.name, ' set progress done:', value);\n    }\n  };\n};\n\n/**\n * The function collects the 'progress' property from questions that are from a\n * given file.\n *\n * @param {string} file The name of the file.\n * @returns An array with the 'progress' values.\n */\nexport const questGetStats = (file) => {\n  return new Promise((resolve, reject) => {\n    const result = [];\n\n    //\n    // We are only interested in questions from a given file.\n    //\n    const range = IDBKeyRange.only(file);\n\n    const store = db\n      .transaction(['questions'], 'readwrite')\n      .objectStore('questions');\n\n    store.index('file').openCursor(range).onsuccess = (e) => {\n      const cursor = e.target.result;\n      if (cursor) {\n        result.push(cursor.value.progress);\n        cursor.continue();\n      }\n      //\n      // The cursor has finished.\n      //\n      else {\n        console.log('Store:', store.name, ' progress values:', result);\n        resolve(result);\n      }\n    };\n  });\n};\n\n/**\n * The function is called with an array of questions and counts the number of \n * correct answers for each question.\n * \n * @param {Array<any>} quests The array of questions that are processed.\n * @returns An array of integers.\n */\nexport const questGetStatistics = (quests) => {\n  const statistic = [0, 0, 0, 0];\n\n  quests.forEach((a) => {\n    statistic[a.progress]++;\n  });\n\n  return statistic;\n};\n\n/**\n * The function is called with a question and a boolean value indicating if the\n * answer was correct.\n * \n * @param {Object} quest The current question.\n * @param {boolean} isCorrect True if the answer was corrent.\n */\nexport const questOnAnswer = (quest, isCorrect) => {\n\n  if (isCorrect) {\n    quest.progress++;\n  } else {\n    quest.progress = 0;\n    quest.failed++;\n  }\n\n  quest.total++;\n  quest.ratio = percentage(quest.failed, quest.total);\n};\n\n/**\n * The function is called with a quest, which should be persisted.\n * \n * @param {Object} quest \n * @returns A Promise\n */\nexport const questPersist = (quest) => {\n\n  return new Promise((resolve, reject) => {\n\n    const store = db\n      .transaction(['questions'], 'readwrite')\n      .objectStore('questions');\n\n    store.put(quest).onsuccess = (e) => {\n      console.log('Store:', store.name, ' update:', quest);\n      resolve();\n    };\n  });\n};\n\n/**\n * The function gets all questions for a topic from the store.\n *\n * @returns A Promise for the array with the questions.\n */\nexport const questGetAll = (topic) => {\n\n  return new Promise((resolve, reject) => {\n\n    const store = db\n      .transaction(['questions'], 'readonly')\n      .objectStore('questions');\n\n    store.index('file').getAll(topic.file).onsuccess = (e) => {\n      resolve(e.target.result);\n    };\n  });\n};\n\n/**\n * The function initializes a quest that was loaded from a topic file.\n * \n * @param {Object} quest The question to be initialized.\n * @param {string} file The name of the topic file.\n */\nexport const questInit = (quest, file) => {\n  quest.file = file;\n  quest.total = 0;\n  quest.failed = 0;\n  quest.ratio = 0.0;\n  quest.progress = 0;\n}","import { db } from './db';\n\n/**\n * The function gets the last modified date of the topics file from the config\n * store.\n *\n * @param {IDBDatabase} db The Database.\n * @returns A Promise for the last modified date.\n */\nexport const dbcGetLastModified = () => {\n\n  return new Promise((resolve, reject) => {\n    db\n      .transaction(['config'], 'readonly')\n      .objectStore('config')\n      .get('topics-last-modified').onsuccess = (e) => {\n\n        const prop = e.target.result;\n\n        //\n        // It is possible that no date exists in the store.\n        //\n        if (prop) {\n          resolve(prop.value);\n        } else {\n          resolve();\n        }\n      };\n  });\n};\n\n/**\n * The function stores the last modified date for the topics file in the config\n * store.\n *\n * @param {Date} lastModified The last modified date of the topics file.\n */\nexport const dbcSetLastModified = (lastModified) => {\n\n  const data = { key: 'topics-last-modified', value: lastModified };\n  const store = db.transaction(['config'], 'readwrite').objectStore('config');\n\n  store.put(data).onsuccess = () => {\n    console.log('Store:', store.name, ' set lastModified:', data);\n  };\n};\n","// TODO: rename file\nimport { fetchLastModified, fetchJson } from './fetch';\nimport { storeDeleteIndex, storeAddAll } from './store';\nimport { topicGetLastModified, topicSetLastModified, topicSync } from './topicModel';\nimport { questInit } from './questModel'\nimport { dbcGetLastModified, dbcSetLastModified } from './dbConfig.js';\nimport { db, dbInit } from './db';\n\n/**\n * The function is called with the file name of a topic. It checks if an update\n * of the stored questions of a topic is necessary and if so, if does the\n * update.\n *\n * @param {String} file\n */\nexport const loadQuestions = async (file) => {\n  console.log(file);\n\n  //\n  // Compare the last modified date of the stored topic file, with the last\n  // modified date of the file on the server, to decide if an update is\n  // necessary.\n  //\n  const storeLm = topicGetLastModified(file);\n  const jsonLm = fetchLastModified(file);\n\n  const [lmStore, lmJson] = await Promise.all([storeLm, jsonLm]);\n  console.log('lmStore', lmStore, 'lmJson', lmJson);\n\n  if (lmStore && lmStore >= lmJson) {\n    return;\n  }\n\n  const json = await fetchJson(file);\n\n  json.forEach(quest => questInit(quest, file));\n  console.log(json);\n\n  //\n  // At this point we know that we have to update the questions for the topic.\n  //\n  const tx = db.transaction(['topics', 'questions'], 'readwrite');\n\n  const delQuestsPromise = await storeDeleteIndex(\n    tx,\n    'questions',\n    'file',\n    file\n  );\n\n  storeAddAll(tx, 'questions', json);\n\n  //\n  // The last step is to update the last modified value for the topic file.\n  //\n  topicSetLastModified(tx, file, lmJson);\n};\n\n// -----------------------------\n\nexport const initApp = async () => {\n  //\n  // Ensure that the database is initialized before we go on.\n  //\n  await dbInit();\n\n  const storeLmPromise = dbcGetLastModified();\n\n  const headLmPromise = fetchLastModified('data/topics.json');\n\n  const [storeLm, headLm] = await Promise.all([storeLmPromise, headLmPromise]);\n\n  console.log('last modified store:', storeLm);\n  console.log('last modified head:', headLm);\n\n  if (!storeLm || storeLm < headLm) {\n    //\n    // TODO: comment => TopicList.svelte has to wait for the sync to finish\n    // We have to wait for the sync before view can read from the store\n    //\n    await fetchJson('data/topics.json').then((json) => {\n      topicSync(json);\n      dbcSetLastModified(headLm);\n    });\n  }\n};\n","\n/**\n * PWA service worker registration.\n */\nexport const pwaSerivceWorkerRegister = async () => {\n\n    if ('serviceWorker' in navigator) {\n        try {\n            //\n            // Finish registration, before we init app.\n            //\n            const registration = await navigator.serviceWorker.register(\n                'service-worker.js'\n            );\n            console.log(\n                'Registration of serivce worker done - scope:',\n                registration.scope\n            );\n        } catch (error) {\n            console.log('Service worker registration failed, error:', error);\n        }\n    }\n}","<h2>Cards</h2>\n","<div class=\"block\">\n  <div class=\"is-text-right\">by Volker Senkel 2021</div>\n</div>\n","<script>\n  import { viewStore } from '../stores/viewStore';\n\n  export let topic;\n\n  const onClick = (topic) => {\n    viewStore.setView('TopicShow', { topic: topic });\n  };\n</script>\n\n<div class=\"card card-shadow content\">\n  <h4>{topic.title}</h4>\n  <table>\n    <tr>\n      <td>Modified</td>\n      <td />\n    </tr>\n    <tr>\n      <td>Status</td>\n      <td />\n    </tr>\n  </table>\n  {#if topic.desc}\n    <p>{topic.desc}</p>\n  {/if}\n  <div class=\"buttons\">\n    <button class=\"button\" on:click={() => onClick(topic)}>Show</button>\n  </div>\n</div>\n","<script>\n  import { onMount } from 'svelte';\n\n  import { topicGetAll } from '../js/topicModel';\n\n  import TopicCard from './TopicCard.svelte';\n\n  let topics = [];\n\n  onMount(() => {\n    topicGetAll().then((t) => {\n      topics = t;\n    });\n  });\n</script>\n\n<div class=\"grid grid-4\">\n  {#each topics as topic}\n    <TopicCard {topic} />\n  {/each}\n</div>\n","<script>\n  import { fmtDate, arrPercentage, arrAll } from '../js/utils';\n  import { loadQuestions } from '../js/persist';\n  import { questSetProgress, questGetStats } from '../js/questModel';\n\n  import { viewStore } from '../stores/viewStore';\n  import { onMount } from 'svelte';\n\n  export let topic;\n\n  //\n  // Properties for the view.\n  //\n  let status = '';\n  let startDisabled = true;\n  let size = 0;\n\n  /**\n   * The function gets the values for 'status' and 'startDisabled' and the\n   * number of questions.\n   */\n  const updateStatus = () => {\n    questGetStats(topic.file).then((arr) => {\n      status = arrPercentage(arr, 3);\n      startDisabled = arrAll(arr, 3);\n      size = arr.length;\n    });\n  };\n\n  /**\n   * On mount we load the questions for the topic and then we update the\n   * properties for this view.\n   */\n  onMount(() => {\n    loadQuestions(topic.file).then(() => updateStatus());\n  });\n\n  /**\n   * Callback function for the back button.\n   */\n  const onBack = () => {\n    viewStore.setView('TopicList');\n  };\n\n  /**\n   * Callback function for the listing button.\n   */\n  const onListing = () => {\n    viewStore.setView('QuestList', { topic: topic });\n  };\n\n  /**\n   * Callback function for the start button.\n   */\n  const onStart = () => {\n    viewStore.setView('QuestShow', { topic: topic });\n  };\n\n  /**\n   * Callback function for the select box.\n   *\n   * @param {Event} e\n   */\n  const onSelect = (e) => {\n    console.log('index', e.target.selectedIndex);\n    //\n    // Set the number of correct answers.\n    //\n    questSetProgress(topic.file, e.target.selectedIndex - 1);\n\n    //\n    // Set the index to 0 to restore the orignal state.\n    //\n    e.target.selectedIndex = 0;\n\n    updateStatus();\n  };\n</script>\n\n<div class=\"card card-shadow content\">\n  <h4>{topic.title}</h4>\n\n  <div class=\"grid grid-4\">\n    <table class=\"is-text-left\">\n      <tr>\n        <td>File</td>\n        <td>{topic.file}</td>\n      </tr>\n      <tr>\n        <td>Modified</td>\n        <td>{fmtDate(topic.lastModified)}</td>\n      </tr>\n      <tr>\n        <td>Description</td>\n        <td>{topic.desc}</td>\n      </tr>\n      <tr>\n        <td>Status</td>\n        <td>{status}</td>\n      </tr>\n      <tr>\n        <td>Size</td>\n        <td>{size}</td>\n      </tr>\n    </table>\n\n    <div>\n      <label for=\"sf-set\">Number of correct answers</label>\n      <select id=\"sf-set\" on:change={onSelect}>\n        <option value=\"\">-- Select --</option>\n        <option value=\"0\">Set 0</option>\n        <option value=\"1\">Set 1</option>\n        <option value=\"2\">Set 2</option>\n        <option value=\"3\">Set 3</option>\n      </select>\n    </div>\n  </div>\n\n  <div class=\"buttons\">\n    <button class=\"button\" on:click={onBack}>Back</button>\n    <button class=\"button\" on:click={onListing}>Listing</button>\n    <button class=\"button\" disabled={startDisabled} on:click={onStart}\n      >Start</button\n    >\n  </div>\n</div>\n","<script>\n  // TODO: listing-column, isting-quest, isting-answer does not exist.\n\n  import { onMount } from 'svelte';\n  import { viewStore } from '../stores/viewStore';\n  import { questGetAll } from '../js/questModel';\n  import { createRepeatToggle } from '../js/utils';\n\n  export let topic;\n\n  let questions = [];\n\n  /**\n   * On mounting the component the questions for the topic is loaded.\n   */\n  onMount(() => {\n    questGetAll(topic).then((topicQuests) => {\n      questions = topicQuests;\n    });\n  });\n\n  /**\n   * Change the view.\n   *\n   * @param topic The topic for the next view.\n   */\n  const onClick = (topic) => {\n    viewStore.setView('TopicShow', { topic: topic });\n  };\n\n  //\n  // The function toogles the values after 2 calls.\n  //\n  const repeatToggle = createRepeatToggle(2, 'is-primary', 'is-info');\n</script>\n\n<div class=\"card card-shadow content\">\n  <h4>{topic.title}</h4>\n  <div class=\"grid grid-2\">\n    {#each questions as question}\n      <div class=\"is-flex-spread grid-full\">\n        <div class=\"h5\">{question.id}</div>\n        {#if question.total != 0}\n          <span class=\"h6\">\n            ( Total: <span class=\"is-text-success\">{question.total}</span> /\n            <span class=\"is-text-danger\">{question.ratio}</span>)\n          </span>\n        {/if}\n      </div>\n\n      <div class=\"card {repeatToggle()}\">\n        <div class=\"content\">\n          <p>{question.quest}</p>\n        </div>\n      </div>\n      <div class=\"card {repeatToggle()}\">\n        <div class=\"content\">\n          <p>{question.answer}</p>\n        </div>\n      </div>\n    {/each}\n  </div>\n\n  <div class=\"buttons\">\n    <button class=\"button\" on:click={() => onClick(topic)}>Back</button>\n  </div>\n</div>\n","<script>\n  export let statistic = [0, 0, 0, 0];\n</script>\n\n<table class=\"table hide-md\">\n  <tr>\n    <td>No correct Answers</td>\n    <td>{statistic[0]}</td>\n  </tr>\n  <tr>\n    <td>One correct Answer</td>\n    <td>{statistic[1]}</td>\n  </tr>\n  <tr>\n    <td>Two correct Answers</td>\n    <td>{statistic[2]}</td>\n  </tr>\n  <tr>\n    <td>Learned</td>\n    <td>{statistic[3]}</td>\n  </tr>\n</table>\n","<script>\n  import { onMount } from 'svelte';\n  import { viewStore } from '../stores/viewStore';\n  import QuestStatistic from './QuestStatistic.svelte';\n  import {\n    questGetAll,\n    questPersist,\n    questOnAnswer,\n    questGetStatistics,\n  } from '../js/questModel';\n  import { shuffleArr } from '../js/utils';\n\n  export let topic;\n\n  let statistic = [];\n\n  let hideAnswer = true;\n\n  let quests = [];\n\n  let unlearned = [];\n\n  let quest = {};\n\n  const handleAnswer = (isCorrect) => {\n    questOnAnswer(quest, isCorrect);\n\n    questPersist(quest).then(() => {\n      if (quest.progress < 3) {\n        unlearned.push(quest);\n      }\n\n      if (unlearned.length === 0) {\n        onStop();\n      }\n\n      statistic = questGetStatistics(quests);\n      next();\n      hideAnswer = !hideAnswer;\n    });\n  };\n\n  const next = () => {\n    quest = unlearned.shift();\n    console.log('next', quest);\n  };\n\n  /**\n   * Callback function for the mount event.\n   */\n  onMount(() => {\n    questGetAll(topic).then((arr) => {\n      quests = arr;\n      unlearned = quests.filter((q) => q.progress < 3);\n      shuffleArr(unlearned);\n      statistic = questGetStatistics(quests);\n      next();\n    });\n  });\n\n  /**\n   * Callback function for the stop button.\n   */\n  const onStop = () => {\n    viewStore.setView('TopicList');\n  };\n\n  /**\n   * Callback function for the show button.\n   */\n  const onShow = () => {\n    hideAnswer = !hideAnswer;\n  };\n\n  const onCorrect = () => {\n    handleAnswer(true);\n  };\n\n  const onWrong = () => {\n    handleAnswer(false);\n  };\n</script>\n\n<div class=\"card card-shadow content\">\n  <h4>{topic.title}</h4>\n\n  <QuestStatistic {statistic} />\n\n  <div class=\"grid grid-2\">\n    <div>\n      <div class=\"is-flex-spread\">\n        <h5>Question</h5>\n        <span class=\"h6\">\n          (Progress: <span class=\"is-text-success\">{quest.progress}</span> /\n          <span class=\"is-text-danger\">{quest.failed}</span>\n          Total: <span class=\"is-text-success\">{quest.total}</span> /\n          <span class=\"is-text-danger\">{quest.ratio}</span>)\n        </span>\n      </div>\n\n      <div class=\"card content is-primary\">\n        <p>{quest.quest}</p>\n      </div>\n    </div>\n\n    <div hidden={hideAnswer}>\n      <h5>Answer</h5>\n      <div class=\"card content is-info\">\n        <p>{quest.answer}</p>\n      </div>\n    </div>\n  </div>\n\n  <!-- Buttons related to questions and answers -->\n  <div class=\"buttons\">\n    <button class=\"button\" hidden={!hideAnswer} on:click={onShow}>Show</button>\n    <button class=\"button is-success\" hidden={hideAnswer} on:click={onCorrect}\n      >Correct</button\n    >\n    <button class=\"button is-danger\" hidden={hideAnswer} on:click={onWrong}\n      >Wrong</button\n    >\n    <button class=\"button\" on:click={onStop}>Stop</button>\n  </div>\n</div>\n","<script>\n  import { onMount } from 'svelte';\n\n  import { viewStore } from './stores/viewStore';\n\n  import { initApp } from './js/persist';\n  import { pwaSerivceWorkerRegister } from './js/pwa';\n\n  import Header from './components/Header.svelte';\n  import Footer from './components/Footer.svelte';\n  import TopicList from './components/TopicList.svelte';\n  import TopicShow from './components/TopicShow.svelte';\n  import QuestList from './components/QuestList.svelte';\n  import QuestShow from './components/QuestShow.svelte';\n\n  onMount(() => {\n    pwaSerivceWorkerRegister();\n\n    viewStore.views = {\n      TopicList: {\n        component: TopicList,\n      },\n      TopicShow: {\n        component: TopicShow,\n      },\n      QuestList: {\n        component: QuestList,\n      },\n      QuestShow: {\n        component: QuestShow,\n      },\n    };\n    //\n    // Set the view if the initialization of the app finished.\n    //\n    initApp().then(() => {\n      viewStore.setView('TopicList');\n    });\n  });\n</script>\n\n<div class=\"container\">\n  <Header />\n\n  <div id=\"main\" class=\"block\">\n    <svelte:component this={$viewStore.component} {...$viewStore.props} />\n  </div>\n\n  <Footer />\n</div>\n\n<style>\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n  target: document.body,\n  props: {},\n});\n\nexport default app;\n"],"names":[],"mappings":"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"}